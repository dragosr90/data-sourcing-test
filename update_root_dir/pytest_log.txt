2025-09-15T12:18:37.2249178Z ##[section]Starting: Test with pytest
2025-09-15T12:18:37.2255836Z ==============================================================================
2025-09-15T12:18:37.2256061Z Task         : Command line
2025-09-15T12:18:37.2256201Z Description  : Run a command line script using Bash on Linux and macOS and cmd.exe on Windows
2025-09-15T12:18:37.2256398Z Version      : 2.250.1
2025-09-15T12:18:37.2256529Z Author       : Microsoft Corporation
2025-09-15T12:18:37.2256679Z Help         : https://docs.microsoft.com/azure/devops/pipelines/tasks/utility/command-line
2025-09-15T12:18:37.2256855Z ==============================================================================
2025-09-15T12:18:37.4419722Z Generating script.
2025-09-15T12:18:37.4429066Z ========================== Starting Command Output ===========================
2025-09-15T12:18:37.4444726Z [command]/usr/bin/bash --noprofile --norc /__w/_temp/417b37dd-46c3-4dee-b853-737a0b64f486.sh
2025-09-15T12:18:37.4513546Z ------------------------- python -m site ---------
2025-09-15T12:18:37.4622501Z sys.path = [
2025-09-15T12:18:37.4622978Z     '/__w/84/s',
2025-09-15T12:18:37.4623284Z     '/usr/local/lib/python311.zip',
2025-09-15T12:18:37.4623578Z     '/usr/local/lib/python3.11',
2025-09-15T12:18:37.4623870Z     '/usr/local/lib/python3.11/lib-dynload',
2025-09-15T12:18:37.4624311Z     '/home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages',
2025-09-15T12:18:37.4624650Z     '/usr/local/lib/python3.11/site-packages',
2025-09-15T12:18:37.4624924Z ]
2025-09-15T12:18:37.4625207Z USER_BASE: '/home/pipeuser_azpcontainer/.local' (exists)
2025-09-15T12:18:37.4625543Z USER_SITE: '/home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages' (exists)
2025-09-15T12:18:37.4625852Z ENABLE_USER_SITE: True
2025-09-15T12:18:37.4650145Z ------------------------ python -c 'import site; print(site.getsitepackages())' ----------
2025-09-15T12:18:37.4726869Z ['/usr/local/lib/python3.11/site-packages']
2025-09-15T12:18:37.4747127Z ------------------------ python -m site --user-site ----------
2025-09-15T12:18:37.4886954Z /home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages
2025-09-15T12:18:37.7288429Z Defaulting to user installation because normal site-packages is not writeable
2025-09-15T12:18:37.8076041Z Looking in indexes: https://p-nexus-3.development.nl.eu.abnamro.com:8443/repository/python-group/simple, https://p-nexus-3.development.nl.eu.abnamro.com:8443/repository/python-group/simple
2025-09-15T12:18:37.8912853Z Collecting pytest-azure-devops
2025-09-15T12:18:37.8976612Z   Downloading https://p-nexus-3.development.nl.eu.abnamro.com:8443/repository/python-group/packages/pytest-azure-devops/0.3.0/pytest_azure_devops-0.3.0-py3-none-any.whl (9.2 kB)
2025-09-15T12:18:37.9182195Z Requirement already satisfied: pytest in /home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages (8.3.3)
2025-09-15T12:18:37.9195819Z Requirement already satisfied: pytest-cov in /home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages (6.0.0)
2025-09-15T12:18:37.9203534Z Requirement already satisfied: pytest-mock in /home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages (3.14.0)
2025-09-15T12:18:37.9296401Z Requirement already satisfied: iniconfig in /home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages (from pytest) (2.1.0)
2025-09-15T12:18:37.9304895Z Requirement already satisfied: packaging in /usr/local/lib/python3.11/site-packages (from pytest) (25.0)
2025-09-15T12:18:37.9314792Z Requirement already satisfied: pluggy<2,>=1.5 in /home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages (from pytest) (1.6.0)
2025-09-15T12:18:37.9378025Z Requirement already satisfied: coverage>=7.5 in /home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages (from coverage[toml]>=7.5->pytest-cov) (7.10.6)
2025-09-15T12:18:38.2426802Z Installing collected packages: pytest-azure-devops
2025-09-15T12:18:38.2724984Z Successfully installed pytest-azure-devops-0.3.0
2025-09-15T12:18:38.3104305Z 
2025-09-15T12:18:38.3104852Z [notice] A new release of pip is available: 24.0 -> 25.2
2025-09-15T12:18:38.3105458Z [notice] To update, run: pip install --upgrade pip
2025-09-15T12:18:40.7495134Z ============================= test session starts ==============================
2025-09-15T12:18:40.7495628Z platform linux -- Python 3.11.13, pytest-8.3.3, pluggy-1.6.0
2025-09-15T12:18:40.7495936Z rootdir: /__w/84/s
2025-09-15T12:18:40.7496224Z configfile: pyproject.toml
2025-09-15T12:18:40.7496558Z plugins: mock-3.14.0, cov-6.0.0, azure-devops-0.3.0, anyio-4.10.0
2025-09-15T12:18:40.7496912Z Agent nr. 1 of 1 selected 397 of 397 tests (other filters might apply afterwards, e.g. pytest marks)
2025-09-15T12:18:40.7497225Z collected 397 items
2025-09-15T12:18:40.7497330Z 
2025-09-15T12:18:40.9152805Z test/month_setup/test_dial_snapshotdate.py ............                  [  3%]
2025-09-15T12:18:50.9670260Z test/scripts/test_check_dependencies.py ......                           [  4%]
2025-09-15T12:18:52.0483022Z test/scripts/test_dial_check_delayed_files.py .....                      [  5%]
2025-09-15T12:18:52.2928084Z test/scripts/test_dial_staging_process.py .................              [ 10%]
2025-09-15T12:18:53.5715539Z test/scripts/test_export_tine_tables.py ....                             [ 11%]
2025-09-15T12:18:53.6133201Z test/scripts/test_new_month_catalog_setup.py ...                         [ 11%]
2025-09-15T12:18:53.8998290Z test/scripts/test_nonssf_staging_process.py .................            [ 16%]
2025-09-15T12:18:54.4236607Z test/scripts/test_run_mapping.py ....................................    [ 25%]
2025-09-15T12:18:54.8113697Z test/scripts/test_ssf_staging_process.py ....................            [ 30%]
2025-09-15T12:18:54.8334060Z test/scripts/test_ssf_staging_process_xml.py ...                         [ 30%]
2025-09-15T12:19:12.7843458Z test/staging/test_extract_dial_data.py .                                 [ 31%]
2025-09-15T12:19:25.9606000Z test/staging/test_extract_non_ssf_data.py ....                           [ 32%]
2025-09-15T12:19:42.7988608Z test/staging/test_extract_ssf_data.py ..........                         [ 34%]
2025-09-15T12:20:06.8786010Z test/test_dq/test_dq_validation.py ...................................   [ 43%]
2025-09-15T12:20:21.8809583Z test/test_extract/test_get_master_data.py ..............                 [ 47%]
2025-09-15T12:20:24.0439081Z test/test_transform/test_all_columns.py ....                             [ 48%]
2025-09-15T12:20:25.0065022Z test/test_transform/test_complex_types.py ...                            [ 48%]
2025-09-15T12:20:29.2737097Z test/test_transform/test_expressions.py .....                            [ 50%]
2025-09-15T12:20:30.8829696Z test/test_transform/test_pipeline_yaml_integrated_target.py F.FF         [ 51%]
2025-09-15T12:20:43.7993532Z test/test_transform/test_transform_business_logic_sql.py ..........      [ 53%]
2025-09-15T12:20:53.2242495Z test/test_transform/test_validate.py ................................... [ 62%]
2025-09-15T12:20:56.8778236Z .......................                                                  [ 68%]
2025-09-15T12:20:57.1932269Z test/test_transform/test_write_and_comment.py .......................... [ 74%]
2025-09-15T12:20:57.2356417Z ..                                                                       [ 75%]
2025-09-15T12:20:57.2436615Z test/test_utils/test_azure_utils.py .                                    [ 75%]
2025-09-15T12:20:57.9683783Z test/test_utils/test_export_parquet.py ..                                [ 76%]
2025-09-15T12:20:58.0060855Z test/test_utils/test_get_catalog.py .....                                [ 77%]
2025-09-15T12:20:58.0789460Z test/test_utils/test_metadata_log_tables.py ...                          [ 78%]
2025-09-15T12:20:58.2528311Z test/test_utils/test_parameter_utils.py ................................ [ 86%]
2025-09-15T12:20:58.3110498Z ...........                                                              [ 88%]
2025-09-15T12:20:58.3214709Z test/test_utils/test_parse_yaml.py F                                     [ 89%]
2025-09-15T12:20:58.3907172Z test/test_utils/test_process_logging.py ........                         [ 91%]
2025-09-15T12:20:58.4240611Z test/test_utils/test_sources_util.py ......                              [ 92%]
2025-09-15T12:20:58.4302203Z test/test_utils/test_table_schema.py .                                   [ 92%]
2025-09-15T12:21:00.4637713Z test/test_utils/test_xml_utils.py ............................           [100%]
2025-09-15T12:21:00.4638182Z 
2025-09-15T12:21:00.4638666Z =================================== FAILURES ===================================
2025-09-15T12:21:00.4639218Z _ test_pipeline_yaml_integrated_target[parameters0-test_catalog.test_schema_20240801.testd1_test_target_table] _
2025-09-15T12:21:00.4639443Z 
2025-09-15T12:21:00.4640078Z spark_session = <pyspark.sql.session.SparkSession object at 0x7fc5f15e9a50>
2025-09-15T12:21:00.4640676Z source_data = {'table_a': {'data': [(1, 2, 3, 1, 5, 1, ...), (2, 3, 3, 1, 5, 2, ...), (3, 1, 3, 0, 5, 3, ...)], 'schema': ['col01', ...col09b']}, 'table_c_testd1': {'data': [(1, 10, 11), (2, 10, 11), (3, 10, 11)], 'schema': ['col01c', 'col11', 'col12']}}
2025-09-15T12:21:00.4641360Z parameters = {'DELIVERY_ENTITY': 'TEST-D1', 'RUN_MONTH': '20240801'}
2025-09-15T12:21:00.4641840Z target_table_name = 'test_catalog.test_schema_20240801.testd1_test_target_table'
2025-09-15T12:21:00.4642034Z 
2025-09-15T12:21:00.4642359Z     @pytest.mark.parametrize(
2025-09-15T12:21:00.4642752Z         ("parameters", "target_table_name"),
2025-09-15T12:21:00.4643131Z         [
2025-09-15T12:21:00.4643460Z             (
2025-09-15T12:21:00.4643838Z                 {"RUN_MONTH": "20240801", "DELIVERY_ENTITY": "TEST-D1"},
2025-09-15T12:21:00.4644507Z                 "test_catalog.test_schema_20240801.testd1_test_target_table",
2025-09-15T12:21:00.4644939Z             ),
2025-09-15T12:21:00.4645260Z         ],
2025-09-15T12:21:00.4645600Z     )
2025-09-15T12:21:00.4645969Z     def test_pipeline_yaml_integrated_target(
2025-09-15T12:21:00.4646444Z         spark_session, source_data, parameters, target_table_name
2025-09-15T12:21:00.4646861Z     ):
2025-09-15T12:21:00.4647310Z         """Test full pipeline of YAML, Integrated data and (filtered) target attributes.
2025-09-15T12:21:00.4647725Z     
2025-09-15T12:21:00.4648064Z         Check `test/data/TEST_YAML.yml` for:
2025-09-15T12:21:00.4648408Z         - `description`
2025-09-15T12:21:00.4648732Z         - `sources`
2025-09-15T12:21:00.4649088Z         - `transformations`
2025-09-15T12:21:00.4649432Z         - `expressions`
2025-09-15T12:21:00.4649780Z         - `filter_target`
2025-09-15T12:21:00.4650089Z         """
2025-09-15T12:21:00.4650457Z >       business_logic = parse_yaml("../test/data/TEST_YAML.yml", parameters=parameters)
2025-09-15T12:21:00.4650639Z 
2025-09-15T12:21:00.4651028Z test/test_transform/test_pipeline_yaml_integrated_target.py:80: 
2025-09-15T12:21:00.4651449Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-09-15T12:21:00.4651613Z 
2025-09-15T12:21:00.4651966Z yaml_path = '../test/data/TEST_YAML.yml'
2025-09-15T12:21:00.4652409Z parameters = {'DELIVERY_ENTITY': 'TEST-D1', 'RUN_MONTH': '20240801'}
2025-09-15T12:21:00.4652584Z 
2025-09-15T12:21:00.4652880Z     def parse_yaml(
2025-09-15T12:21:00.4653215Z         yaml_path: Path | str,
2025-09-15T12:21:00.4653571Z         parameters: dict | None = None,
2025-09-15T12:21:00.4653944Z     ) -> BusinessLogicConfig:
2025-09-15T12:21:00.4654626Z         """Parse YAML with business logic and replace placeholders with parameters.
2025-09-15T12:21:00.4654986Z     
2025-09-15T12:21:00.4655321Z         This function processes a YAML file by:
2025-09-15T12:21:00.4655717Z         1. Replacing quoted strings (single or double quotes) with triple single quotes
2025-09-15T12:21:00.4656051Z             ('''value''').
2025-09-15T12:21:00.4656462Z         2. Handling null constants by enclosing them in single quotes ('null').
2025-09-15T12:21:00.4657234Z         3. Replacing placeholders (e.g., {{ PARAMETER }}) with corresponding values from the
2025-09-15T12:21:00.4658157Z             `parameters` dictionary.
2025-09-15T12:21:00.4658891Z         4. Standardizing the value for the `DELIVERY_ENTITY` parameter if required.
2025-09-15T12:21:00.4659558Z     
2025-09-15T12:21:00.4660124Z         Args:
2025-09-15T12:21:00.4660816Z             yaml_path (str | Path): Path to the YAML file containing business logic.
2025-09-15T12:21:00.4661643Z             parameters (dict | None, optional): A dictionary of parameters to replace in the
2025-09-15T12:21:00.4662339Z                 YAML.
2025-09-15T12:21:00.4662900Z     
2025-09-15T12:21:00.4663474Z         Returns:
2025-09-15T12:21:00.4664153Z             BusinessLogicConfig: Business Logic mapping for ETL
2025-09-15T12:21:00.4664947Z         """
2025-09-15T12:21:00.4665815Z         full_path = Path("/Workspace/Shared/deployment/mappings/business_logic") / yaml_path
2025-09-15T12:21:00.4666617Z >       with open(full_path) as yaml_file:  # noqa: PTH123
2025-09-15T12:21:00.4667504Z E       FileNotFoundError: [Errno 2] No such file or directory: '/Workspace/Shared/deployment/mappings/business_logic/../test/data/TEST_YAML.yml'
2025-09-15T12:21:00.4667946Z 
2025-09-15T12:21:00.4668648Z src/abnamro_bsrc_etl/utils/parse_yaml.py:33: FileNotFoundError
2025-09-15T12:21:00.4669482Z ___________________________ test_pipeline_yaml_pivot ___________________________
2025-09-15T12:21:00.4669851Z 
2025-09-15T12:21:00.4670546Z spark_session = <pyspark.sql.session.SparkSession object at 0x7fc5f15e9a50>
2025-09-15T12:21:00.4670904Z 
2025-09-15T12:21:00.4671561Z     def test_pipeline_yaml_pivot(spark_session):
2025-09-15T12:21:00.4672341Z >       business_logic = parse_yaml("../test/data/TEST_YAML_PIVOT.yml")
2025-09-15T12:21:00.4672667Z 
2025-09-15T12:21:00.4673389Z test/test_transform/test_pipeline_yaml_integrated_target.py:210: 
2025-09-15T12:21:00.4674311Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-09-15T12:21:00.4674614Z 
2025-09-15T12:21:00.4675304Z yaml_path = '../test/data/TEST_YAML_PIVOT.yml', parameters = None
2025-09-15T12:21:00.4675635Z 
2025-09-15T12:21:00.4676213Z     def parse_yaml(
2025-09-15T12:21:00.4676841Z         yaml_path: Path | str,
2025-09-15T12:21:00.4677489Z         parameters: dict | None = None,
2025-09-15T12:21:00.4678156Z     ) -> BusinessLogicConfig:
2025-09-15T12:21:00.4678900Z         """Parse YAML with business logic and replace placeholders with parameters.
2025-09-15T12:21:00.4679604Z     
2025-09-15T12:21:00.4680240Z         This function processes a YAML file by:
2025-09-15T12:21:00.4681016Z         1. Replacing quoted strings (single or double quotes) with triple single quotes
2025-09-15T12:21:00.4681742Z             ('''value''').
2025-09-15T12:21:00.4682465Z         2. Handling null constants by enclosing them in single quotes ('null').
2025-09-15T12:21:00.4683304Z         3. Replacing placeholders (e.g., {{ PARAMETER }}) with corresponding values from the
2025-09-15T12:21:00.4684062Z             `parameters` dictionary.
2025-09-15T12:21:00.4684999Z         4. Standardizing the value for the `DELIVERY_ENTITY` parameter if required.
2025-09-15T12:21:00.4685697Z     
2025-09-15T12:21:00.4686270Z         Args:
2025-09-15T12:21:00.4686953Z             yaml_path (str | Path): Path to the YAML file containing business logic.
2025-09-15T12:21:00.4687765Z             parameters (dict | None, optional): A dictionary of parameters to replace in the
2025-09-15T12:21:00.4688454Z                 YAML.
2025-09-15T12:21:00.4689018Z     
2025-09-15T12:21:00.4689585Z         Returns:
2025-09-15T12:21:00.4690269Z             BusinessLogicConfig: Business Logic mapping for ETL
2025-09-15T12:21:00.4690898Z         """
2025-09-15T12:21:00.4691620Z         full_path = Path("/Workspace/Shared/deployment/mappings/business_logic") / yaml_path
2025-09-15T12:21:00.4692430Z >       with open(full_path) as yaml_file:  # noqa: PTH123
2025-09-15T12:21:00.4693394Z E       FileNotFoundError: [Errno 2] No such file or directory: '/Workspace/Shared/deployment/mappings/business_logic/../test/data/TEST_YAML_PIVOT.yml'
2025-09-15T12:21:00.4694036Z 
2025-09-15T12:21:00.4694837Z src/abnamro_bsrc_etl/utils/parse_yaml.py:33: FileNotFoundError
2025-09-15T12:21:00.4695670Z _______________________________ test_run_mapping _______________________________
2025-09-15T12:21:00.4696036Z 
2025-09-15T12:21:00.4696731Z spark_session = <pyspark.sql.session.SparkSession object at 0x7fc5f15e9a50>
2025-09-15T12:21:00.4697063Z 
2025-09-15T12:21:00.4697682Z     def test_run_mapping(spark_session):
2025-09-15T12:21:00.4698389Z         """Test full pipeline from run_mapping script"""
2025-09-15T12:21:00.4699037Z     
2025-09-15T12:21:00.4699633Z         source_dict = {
2025-09-15T12:21:00.4700244Z             "table_a": {
2025-09-15T12:21:00.4700889Z                 "data": [("a", "b", 2), ("a", "b", 4)],
2025-09-15T12:21:00.4701711Z                 "schema": ["col01", "col02", "col03"],
2025-09-15T12:21:00.4702313Z             },
2025-09-15T12:21:00.4702899Z             "table_b": {
2025-09-15T12:21:00.4703523Z                 "data": [("a", "X"), ("a", "Y"), ("b", "Z")],
2025-09-15T12:21:00.4704297Z                 "schema": ["col01", "col04"],
2025-09-15T12:21:00.4704905Z             },
2025-09-15T12:21:00.4705480Z             "table_c": {
2025-09-15T12:21:00.4706127Z                 "data": [(2, 1.3, 1.8), (2, 2.6, 3.5)],
2025-09-15T12:21:00.4706791Z                 "schema": ["X", "col05", "col06"],
2025-09-15T12:21:00.4707381Z             },
2025-09-15T12:21:00.4707945Z         }
2025-09-15T12:21:00.4708592Z         for source_name, source_data in source_dict.items():
2025-09-15T12:21:00.4709383Z             spark_session.createDataFrame(**source_data).createOrReplaceTempView(
2025-09-15T12:21:00.4710102Z                 source_name
2025-09-15T12:21:00.4710694Z             )
2025-09-15T12:21:00.4711254Z     
2025-09-15T12:21:00.4711846Z >       run_mapping(
2025-09-15T12:21:00.4712454Z             spark_session,
2025-09-15T12:21:00.4713050Z             stage="test/data",
2025-09-15T12:21:00.4713724Z             target_mapping="TEST_YAML_PIVOT.yml",
2025-09-15T12:21:00.4714517Z             run_month="",
2025-09-15T12:21:00.4715116Z             local=True,
2025-09-15T12:21:00.4715675Z         )
2025-09-15T12:21:00.4715887Z 
2025-09-15T12:21:00.4716621Z test/test_transform/test_pipeline_yaml_integrated_target.py:288: 
2025-09-15T12:21:00.4717421Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-09-15T12:21:00.4718181Z src/abnamro_bsrc_etl/scripts/run_mapping.py:67: in run_mapping
2025-09-15T12:21:00.4718942Z     business_logic_dict = parse_yaml(
2025-09-15T12:21:00.4719670Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-09-15T12:21:00.4719963Z 
2025-09-15T12:21:00.4720634Z yaml_path = PosixPath('test/data/TEST_YAML_PIVOT.yml')
2025-09-15T12:21:00.4721399Z parameters = {'DELIVERY_ENTITY': '', 'RUN_MONTH': ''}
2025-09-15T12:21:00.4721714Z 
2025-09-15T12:21:00.4722304Z     def parse_yaml(
2025-09-15T12:21:00.4722930Z         yaml_path: Path | str,
2025-09-15T12:21:00.4723589Z         parameters: dict | None = None,
2025-09-15T12:21:00.4724374Z     ) -> BusinessLogicConfig:
2025-09-15T12:21:00.4725149Z         """Parse YAML with business logic and replace placeholders with parameters.
2025-09-15T12:21:00.4725833Z     
2025-09-15T12:21:00.4726465Z         This function processes a YAML file by:
2025-09-15T12:21:00.4727255Z         1. Replacing quoted strings (single or double quotes) with triple single quotes
2025-09-15T12:21:00.4727995Z             ('''value''').
2025-09-15T12:21:00.4728733Z         2. Handling null constants by enclosing them in single quotes ('null').
2025-09-15T12:21:00.4729573Z         3. Replacing placeholders (e.g., {{ PARAMETER }}) with corresponding values from the
2025-09-15T12:21:00.4730367Z             `parameters` dictionary.
2025-09-15T12:21:00.4731125Z         4. Standardizing the value for the `DELIVERY_ENTITY` parameter if required.
2025-09-15T12:21:00.4731828Z     
2025-09-15T12:21:00.4732401Z         Args:
2025-09-15T12:21:00.4733115Z             yaml_path (str | Path): Path to the YAML file containing business logic.
2025-09-15T12:21:00.4734059Z             parameters (dict | None, optional): A dictionary of parameters to replace in the
2025-09-15T12:21:00.4734884Z                 YAML.
2025-09-15T12:21:00.4735419Z     
2025-09-15T12:21:00.4735996Z         Returns:
2025-09-15T12:21:00.4736670Z             BusinessLogicConfig: Business Logic mapping for ETL
2025-09-15T12:21:00.4737300Z         """
2025-09-15T12:21:00.4738136Z         full_path = Path("/Workspace/Shared/deployment/mappings/business_logic") / yaml_path
2025-09-15T12:21:00.4738940Z >       with open(full_path) as yaml_file:  # noqa: PTH123
2025-09-15T12:21:00.4739818Z E       FileNotFoundError: [Errno 2] No such file or directory: '/Workspace/Shared/deployment/mappings/business_logic/test/data/TEST_YAML_PIVOT.yml'
2025-09-15T12:21:00.4740369Z 
2025-09-15T12:21:00.4741035Z src/abnamro_bsrc_etl/utils/parse_yaml.py:33: FileNotFoundError
2025-09-15T12:21:00.4741869Z ----------------------------- Captured stdout call -----------------------------
2025-09-15T12:21:00.4742724Z 2025-09-15 12:20:30 [ERROR] write_to_log:  Error writing to process log table log_.process_log
2025-09-15T12:21:00.4743496Z Traceback (most recent call last):
2025-09-15T12:21:00.4744323Z   File "/__w/84/s/src/abnamro_bsrc_etl/utils/table_logging.py", line 33, in write_to_log
2025-09-15T12:21:00.4745060Z     log_entry_df.write.mode("append").saveAsTable(
2025-09-15T12:21:00.4745913Z   File "/home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages/pyspark/sql/readwriter.py", line 1586, in saveAsTable
2025-09-15T12:21:00.4746727Z     self._jwrite.saveAsTable(name)
2025-09-15T12:21:00.4747502Z   File "/home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages/py4j/java_gateway.py", line 1322, in __call__
2025-09-15T12:21:00.4748304Z     return_value = get_return_value(
2025-09-15T12:21:00.4748889Z                    ^^^^^^^^^^^^^^^^^
2025-09-15T12:21:00.4749681Z   File "/home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages/pyspark/errors/exceptions/captured.py", line 185, in deco
2025-09-15T12:21:00.4750480Z     raise converted from None
2025-09-15T12:21:00.4751288Z pyspark.errors.exceptions.captured.AnalysisException: Couldn't find a catalog to handle the identifier bsrc_d.log_.process_log.
2025-09-15T12:21:00.4752230Z 2025-09-15 12:20:30 [ERROR] write_to_log:  Error writing to process log table log_.process_log
2025-09-15T12:21:00.4752969Z Traceback (most recent call last):
2025-09-15T12:21:00.4753701Z   File "/__w/84/s/src/abnamro_bsrc_etl/utils/table_logging.py", line 33, in write_to_log
2025-09-15T12:21:00.4754607Z     log_entry_df.write.mode("append").saveAsTable(
2025-09-15T12:21:00.4755420Z   File "/home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages/pyspark/sql/readwriter.py", line 1586, in saveAsTable
2025-09-15T12:21:00.4756232Z     self._jwrite.saveAsTable(name)
2025-09-15T12:21:00.4757055Z   File "/home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages/py4j/java_gateway.py", line 1322, in __call__
2025-09-15T12:21:00.4757872Z     return_value = get_return_value(
2025-09-15T12:21:00.4758495Z                    ^^^^^^^^^^^^^^^^^
2025-09-15T12:21:00.4759286Z   File "/home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages/pyspark/errors/exceptions/captured.py", line 185, in deco
2025-09-15T12:21:00.4760098Z     raise converted from None
2025-09-15T12:21:00.4761140Z pyspark.errors.exceptions.captured.AnalysisException: Couldn't find a catalog to handle the identifier bsrc_d.log_.process_log.
2025-09-15T12:21:00.4762078Z ------------------------------ Captured log call -------------------------------
2025-09-15T12:21:00.4762965Z ERROR    betl_src_poc_logger:table_logging.py:37 Error writing to process log table log_.process_log
2025-09-15T12:21:00.4763750Z Traceback (most recent call last):
2025-09-15T12:21:00.4764680Z   File "/__w/84/s/src/abnamro_bsrc_etl/utils/table_logging.py", line 33, in write_to_log
2025-09-15T12:21:00.4765458Z     log_entry_df.write.mode("append").saveAsTable(
2025-09-15T12:21:00.4766436Z   File "/home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages/pyspark/sql/readwriter.py", line 1586, in saveAsTable
2025-09-15T12:21:00.4767240Z     self._jwrite.saveAsTable(name)
2025-09-15T12:21:00.4768044Z   File "/home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages/py4j/java_gateway.py", line 1322, in __call__
2025-09-15T12:21:00.4768832Z     return_value = get_return_value(
2025-09-15T12:21:00.4769444Z                    ^^^^^^^^^^^^^^^^^
2025-09-15T12:21:00.4770202Z   File "/home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages/pyspark/errors/exceptions/captured.py", line 185, in deco
2025-09-15T12:21:00.4770990Z     raise converted from None
2025-09-15T12:21:00.4771932Z pyspark.errors.exceptions.captured.AnalysisException: Couldn't find a catalog to handle the identifier bsrc_d.log_.process_log.
2025-09-15T12:21:00.4772891Z ___________________ test_parse_yaml[IHUB-FR1-202412-output0] ___________________
2025-09-15T12:21:00.4773268Z 
2025-09-15T12:21:00.4773900Z delivery_entity = 'IHUB-FR1', run_month = '202412'
2025-09-15T12:21:00.4775064Z output = {'expressions': {'DeliveryEntity': "'IHUB-FR1'", 'DeliveryEntity2': "'IHUB-FR1'", 'NewCol01': 'TBLA.col01', 'NewCol11'...BLA', 'right_source': 'TBLC'}}, {'add_variables': {'column_mapping': {'var': "colA in ('''ABC''', '''IHUB-FR1''')"}}}]}
2025-09-15T12:21:00.4775703Z 
2025-09-15T12:21:00.4776304Z     @pytest.mark.parametrize(
2025-09-15T12:21:00.4776989Z         ("delivery_entity", "run_month", "output"),
2025-09-15T12:21:00.4777613Z         [
2025-09-15T12:21:00.4778131Z             (
2025-09-15T12:21:00.4778701Z                 "IHUB-FR1",
2025-09-15T12:21:00.4779181Z                 "202412",
2025-09-15T12:21:00.4779464Z                 {
2025-09-15T12:21:00.4779797Z                     "target": "test_catalog.test_schema_202412.ihubfr1_test_target_table",
2025-09-15T12:21:00.4780136Z                     "sources": [
2025-09-15T12:21:00.4780482Z                         {
2025-09-15T12:21:00.4780835Z                             "alias": "TBLA",
2025-09-15T12:21:00.4781215Z                             "columns": ["col01", "col02", "col03"],
2025-09-15T12:21:00.4781643Z                             "filter": "col02 = '''IHUB-FR1''' AND col03 = '''IHUB-FR1'''",
2025-09-15T12:21:00.4782057Z                             "source": "schema1.ihubfr1_table_a",
2025-09-15T12:21:00.4782424Z                         },
2025-09-15T12:21:00.4782738Z                         {
2025-09-15T12:21:00.4783072Z                             "alias": "TBLC",
2025-09-15T12:21:00.4783459Z                             "columns": ["col01c", "col11", "col12"],
2025-09-15T12:21:00.4783826Z                             "source": "schema2.ihubfr1_table_c",
2025-09-15T12:21:00.4784325Z                         },
2025-09-15T12:21:00.4784681Z                     ],
2025-09-15T12:21:00.4785010Z                     "transformations": [
2025-09-15T12:21:00.4785347Z                         {
2025-09-15T12:21:00.4785690Z                             "join": {
2025-09-15T12:21:00.4786058Z                                 "left_source": "TBLA",
2025-09-15T12:21:00.4786420Z                                 "right_source": "TBLC",
2025-09-15T12:21:00.4786761Z                                 "condition": [
2025-09-15T12:21:00.4787135Z                                     "TBLA.col01 = TBLC.col01c",
2025-09-15T12:21:00.4787508Z                                     "TBLC.col12 = '''IHUB-FR1'''",
2025-09-15T12:21:00.4787877Z                                     "TBLC.col12 = '''IHUB-FR1'''",
2025-09-15T12:21:00.4788206Z                                 ],
2025-09-15T12:21:00.4788533Z                                 "how": "left",
2025-09-15T12:21:00.4788846Z                             }
2025-09-15T12:21:00.4789166Z                         },
2025-09-15T12:21:00.4789474Z                         {
2025-09-15T12:21:00.4789832Z                             "add_variables": {
2025-09-15T12:21:00.4790181Z                                 "column_mapping": {
2025-09-15T12:21:00.4790717Z                                     "var": "colA in ('''ABC''', '''IHUB-FR1''')"
2025-09-15T12:21:00.4791060Z                                 }
2025-09-15T12:21:00.4791376Z                             }
2025-09-15T12:21:00.4791693Z                         },
2025-09-15T12:21:00.4791999Z                     ],
2025-09-15T12:21:00.4792329Z                     "expressions": {
2025-09-15T12:21:00.4792685Z                         "DeliveryEntity": "'IHUB-FR1'",
2025-09-15T12:21:00.4793055Z                         "DeliveryEntity2": "'IHUB-FR1'",
2025-09-15T12:21:00.4793488Z                         "WrongDeliveryEntity": "ihubfr1",
2025-09-15T12:21:00.4793896Z                         "NewCol01": "TBLA.col01",
2025-09-15T12:21:00.4794503Z                         "NewCol11": "TBLC.col11",
2025-09-15T12:21:00.4794838Z                     },
2025-09-15T12:21:00.4795163Z                 },
2025-09-15T12:21:00.4795472Z             ),
2025-09-15T12:21:00.4795781Z         ],
2025-09-15T12:21:00.4796085Z     )
2025-09-15T12:21:00.4796457Z     def test_parse_yaml(delivery_entity, run_month, output):
2025-09-15T12:21:00.4796841Z         """Test Parse YAML file."""
2025-09-15T12:21:00.4797188Z >       business_logic = parse_yaml(
2025-09-15T12:21:00.4797548Z             "../test/data/test_parse_yaml.yml",
2025-09-15T12:21:00.4797955Z             parameters={"DELIVERY_ENTITY": delivery_entity, "RUN_MONTH": run_month},
2025-09-15T12:21:00.4798318Z         )
2025-09-15T12:21:00.4798444Z 
2025-09-15T12:21:00.4798819Z test/test_utils/test_parse_yaml.py:61: 
2025-09-15T12:21:00.4799233Z _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
2025-09-15T12:21:00.4799386Z 
2025-09-15T12:21:00.4799753Z yaml_path = '../test/data/test_parse_yaml.yml'
2025-09-15T12:21:00.4800167Z parameters = {'DELIVERY_ENTITY': 'IHUB-FR1', 'RUN_MONTH': '202412'}
2025-09-15T12:21:00.4800329Z 
2025-09-15T12:21:00.4800650Z     def parse_yaml(
2025-09-15T12:21:00.4800983Z         yaml_path: Path | str,
2025-09-15T12:21:00.4801348Z         parameters: dict | None = None,
2025-09-15T12:21:00.4801719Z     ) -> BusinessLogicConfig:
2025-09-15T12:21:00.4802122Z         """Parse YAML with business logic and replace placeholders with parameters.
2025-09-15T12:21:00.4802489Z     
2025-09-15T12:21:00.4802824Z         This function processes a YAML file by:
2025-09-15T12:21:00.4803250Z         1. Replacing quoted strings (single or double quotes) with triple single quotes
2025-09-15T12:21:00.4803650Z             ('''value''').
2025-09-15T12:21:00.4804041Z         2. Handling null constants by enclosing them in single quotes ('null').
2025-09-15T12:21:00.4804705Z         3. Replacing placeholders (e.g., {{ PARAMETER }}) with corresponding values from the
2025-09-15T12:21:00.4805112Z             `parameters` dictionary.
2025-09-15T12:21:00.4805522Z         4. Standardizing the value for the `DELIVERY_ENTITY` parameter if required.
2025-09-15T12:21:00.4805875Z     
2025-09-15T12:21:00.4806200Z         Args:
2025-09-15T12:21:00.4806586Z             yaml_path (str | Path): Path to the YAML file containing business logic.
2025-09-15T12:21:00.4807036Z             parameters (dict | None, optional): A dictionary of parameters to replace in the
2025-09-15T12:21:00.4807444Z                 YAML.
2025-09-15T12:21:00.4807753Z     
2025-09-15T12:21:00.4808080Z         Returns:
2025-09-15T12:21:00.4808460Z             BusinessLogicConfig: Business Logic mapping for ETL
2025-09-15T12:21:00.4808837Z         """
2025-09-15T12:21:00.4809203Z         full_path = Path("/Workspace/Shared/deployment/mappings/business_logic") / yaml_path
2025-09-15T12:21:00.4809602Z >       with open(full_path) as yaml_file:  # noqa: PTH123
2025-09-15T12:21:00.4810085Z E       FileNotFoundError: [Errno 2] No such file or directory: '/Workspace/Shared/deployment/mappings/business_logic/../test/data/test_parse_yaml.yml'
2025-09-15T12:21:00.4810359Z 
2025-09-15T12:21:00.4810733Z src/abnamro_bsrc_etl/utils/parse_yaml.py:33: FileNotFoundError
2025-09-15T12:21:00.4811166Z =============================== warnings summary ===============================
2025-09-15T12:21:00.4811841Z ../../../home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages/holidays/deprecations/v1_incompatibility.py:40
2025-09-15T12:21:00.4812418Z   /home/pipeuser_azpcontainer/.local/lib/python3.11/site-packages/holidays/deprecations/v1_incompatibility.py:40: FutureIncompatibilityWarning: 
2025-09-15T12:21:00.4812841Z   
2025-09-15T12:21:00.4813193Z   This is a future version incompatibility warning from Holidays v0.62
2025-09-15T12:21:00.4813651Z   to inform you about an upcoming change in our API versioning strategy that may affect your
2025-09-15T12:21:00.4814130Z   project's dependencies. Starting from version 1.0 onwards, we will be following a loose form of
2025-09-15T12:21:00.4814900Z   Semantic Versioning (SemVer, https://semver.org) to provide clearer communication regarding any
2025-09-15T12:21:00.4815311Z   potential breaking changes.
2025-09-15T12:21:00.4815647Z   
2025-09-15T12:21:00.4816057Z   This means that while we strive to maintain backward compatibility, there might be occasional
2025-09-15T12:21:00.4816506Z   updates that introduce breaking changes to our API. To ensure the stability of your projects,
2025-09-15T12:21:00.4816970Z   we highly recommend pinning the version of our API that you rely on. You can pin your current
2025-09-15T12:21:00.4817427Z   holidays v0.x dependency (e.g., holidays==0.62) or limit it (e.g., holidays<1.0) in order to
2025-09-15T12:21:00.4817906Z   avoid potentially unwanted upgrade to the version 1.0 when it's released (ETA 2025Q1-Q2).
2025-09-15T12:21:00.4818277Z   
2025-09-15T12:21:00.4818692Z   If you have any questions or concerns regarding this change, please don't hesitate to reach out
2025-09-15T12:21:00.4819161Z   to us via https://github.com/vacanza/holidays/discussions/1800.
2025-09-15T12:21:00.4819509Z   
2025-09-15T12:21:00.4819832Z     warnings.warn(
2025-09-15T12:21:00.4819968Z 
2025-09-15T12:21:00.4820348Z -- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
2025-09-15T12:21:00.4820788Z ---- generated xml file: /__w/84/TestResults/test_report/test-results-1.xml ----
2025-09-15T12:21:00.4820970Z 
2025-09-15T12:21:00.4821383Z ---------- coverage: platform linux, python 3.11.13-final-0 ----------
2025-09-15T12:21:00.4821792Z Name                                                             Stmts   Miss Branch BrPart  Cover   Missing
2025-09-15T12:21:00.4822216Z ------------------------------------------------------------------------------------------------------------
2025-09-15T12:21:00.4822627Z src/__init__.py                                                      0      0      0      0   100%
2025-09-15T12:21:00.4823009Z src/abnamro_bsrc_etl/__init__.py                                     0      0      0      0   100%
2025-09-15T12:21:00.4823428Z src/abnamro_bsrc_etl/config/__init__.py                              0      0      0      0   100%
2025-09-15T12:21:00.4823853Z src/abnamro_bsrc_etl/config/business_logic.py                       54      0      0      0   100%
2025-09-15T12:21:00.4824402Z src/abnamro_bsrc_etl/config/constants.py                             5      1      2      1    71%   5
2025-09-15T12:21:00.4824836Z src/abnamro_bsrc_etl/config/exceptions.py                           37      0      0      0   100%
2025-09-15T12:21:00.4825252Z src/abnamro_bsrc_etl/config/process.py                               7      0      0      0   100%
2025-09-15T12:21:00.4825668Z src/abnamro_bsrc_etl/config/schema.py                                5      0      0      0   100%
2025-09-15T12:21:00.4826068Z src/abnamro_bsrc_etl/config/ssf_tables.py                            2      0      0      0   100%
2025-09-15T12:21:00.4826470Z src/abnamro_bsrc_etl/dq/__init__.py                                  0      0      0      0   100%
2025-09-15T12:21:00.4826900Z src/abnamro_bsrc_etl/dq/dq_validation.py                           153      0     46      0   100%
2025-09-15T12:21:00.4827312Z src/abnamro_bsrc_etl/extract/__init__.py                             0      0      0      0   100%
2025-09-15T12:21:00.4827932Z src/abnamro_bsrc_etl/extract/master_data_sql.py                     96     16     36      3    77%   87, 116-136, 162-164, 298->286
2025-09-15T12:21:00.4828395Z src/abnamro_bsrc_etl/month_setup/__init__.py                         0      0      0      0   100%
2025-09-15T12:21:00.4828839Z src/abnamro_bsrc_etl/month_setup/dial_derive_snapshotdate.py        36      0      8      0   100%
2025-09-15T12:21:00.4829285Z src/abnamro_bsrc_etl/month_setup/metadata_log_tables.py             40      9      8      0    81%   175-180, 187-191, 197-201
2025-09-15T12:21:00.4829765Z src/abnamro_bsrc_etl/month_setup/setup_new_month.py                 29     11      0      0    62%   60-84
2025-09-15T12:21:00.4830327Z src/abnamro_bsrc_etl/scripts/__init__.py                             0      0      0      0   100%
2025-09-15T12:21:00.4830743Z src/abnamro_bsrc_etl/scripts/check_dependencies.py                  26      0      2      0   100%
2025-09-15T12:21:00.4831206Z src/abnamro_bsrc_etl/scripts/dial_check_delayed_files.py            27      0      6      1    97%   67->exit
2025-09-15T12:21:00.4831646Z src/abnamro_bsrc_etl/scripts/dial_staging_process.py                65      0     22      0   100%
2025-09-15T12:21:00.4832078Z src/abnamro_bsrc_etl/scripts/export_tine_tables.py                  33      0      6      0   100%
2025-09-15T12:21:00.4832510Z src/abnamro_bsrc_etl/scripts/new_month_setup.py                      7      0      2      0   100%
2025-09-15T12:21:00.4832935Z src/abnamro_bsrc_etl/scripts/nonssf_staging_process.py              63      0     20      1    99%   38->exit
2025-09-15T12:21:00.4833399Z src/abnamro_bsrc_etl/scripts/run_mapping.py                         37      7     10      1    79%   133-145
2025-09-15T12:21:00.4833827Z src/abnamro_bsrc_etl/scripts/ssf_staging_process.py                 58      0     18      0   100%
2025-09-15T12:21:00.4834430Z src/abnamro_bsrc_etl/scripts/ssf_staging_process_xml.py             24      0      0      0   100%
2025-09-15T12:21:00.4834890Z src/abnamro_bsrc_etl/staging/__init__.py                             0      0      0      0   100%
2025-09-15T12:21:00.4835323Z src/abnamro_bsrc_etl/staging/extract_base.py                        77      3     10      2    94%   162-164, 311->321
2025-09-15T12:21:00.4835763Z src/abnamro_bsrc_etl/staging/extract_dial_data.py                   77      0      2      0   100%
2025-09-15T12:21:00.4836251Z src/abnamro_bsrc_etl/staging/extract_nonssf_data.py                153     17     40      6    88%   90, 121-126, 188-192, 195-200, 224-225, 274, 321->303, 355-357, 419-423
2025-09-15T12:21:00.4836815Z src/abnamro_bsrc_etl/staging/extract_ssf_data.py                   179     17     30      7    89%   271-275, 301-307, 322-323, 354, 461-462, 502->451, 514-515, 518-521, 616-619
2025-09-15T12:21:00.4837337Z src/abnamro_bsrc_etl/staging/status.py                              58      3      0      0    95%   18, 53-54
2025-09-15T12:21:00.4837784Z src/abnamro_bsrc_etl/transform/__init__.py                           0      0      0      0   100%
2025-09-15T12:21:00.4838217Z src/abnamro_bsrc_etl/transform/complex_types.py                     15      0      0      0   100%
2025-09-15T12:21:00.4838693Z src/abnamro_bsrc_etl/transform/table_write_and_comment.py           79      0     22      1    99%   225->227
2025-09-15T12:21:00.4839140Z src/abnamro_bsrc_etl/transform/transform_business_logic_sql.py       9      0      0      0   100%
2025-09-15T12:21:00.4839602Z src/abnamro_bsrc_etl/utils/__init__.py                               0      0      0      0   100%
2025-09-15T12:21:00.4840014Z src/abnamro_bsrc_etl/utils/alias_util.py                            18      0      0      0   100%
2025-09-15T12:21:00.4840438Z src/abnamro_bsrc_etl/utils/azure_utils.py                            5      0      0      0   100%
2025-09-15T12:21:00.4840886Z src/abnamro_bsrc_etl/utils/export_parquet.py                        22      2      0      0    91%   67-68
2025-09-15T12:21:00.4841320Z src/abnamro_bsrc_etl/utils/get_dbutils.py                            6      1      0      0    83%   11
2025-09-15T12:21:00.4841868Z src/abnamro_bsrc_etl/utils/get_env.py                               12      0      0      0   100%
2025-09-15T12:21:00.4842297Z src/abnamro_bsrc_etl/utils/logging_util.py                          10      0      0      0   100%
2025-09-15T12:21:00.4842704Z src/abnamro_bsrc_etl/utils/parameter_utils.py                       25      0     10      0   100%
2025-09-15T12:21:00.4843118Z src/abnamro_bsrc_etl/utils/parse_yaml.py                            28     18     12      0    25%   34-67, 92, 120-128
2025-09-15T12:21:00.4843576Z src/abnamro_bsrc_etl/utils/sources_util.py                          56      7     18      3    84%   25->19, 106-110, 149, 193, 202
2025-09-15T12:21:00.4844162Z src/abnamro_bsrc_etl/utils/table_logging.py                         19      0      2      0   100%
2025-09-15T12:21:00.4844765Z src/abnamro_bsrc_etl/utils/table_schema.py                           6      0      0      0   100%
2025-09-15T12:21:00.4845202Z src/abnamro_bsrc_etl/utils/transformations_util.py                  20      0      4      0   100%
2025-09-15T12:21:00.4845663Z src/abnamro_bsrc_etl/utils/xml_utils.py                             86      5     30      3    91%   67->59, 94->96, 101-116
2025-09-15T12:21:00.4846103Z src/abnamro_bsrc_etl/validate/__init__.py                            0      0      0      0   100%
2025-09-15T12:21:00.4846536Z src/abnamro_bsrc_etl/validate/base.py                                5      0      0      0   100%
2025-09-15T12:21:00.4846967Z src/abnamro_bsrc_etl/validate/expressions.py                        34     12     10      1    57%   37-61
2025-09-15T12:21:00.4847396Z src/abnamro_bsrc_etl/validate/run_all.py                            15      0      2      0   100%
2025-09-15T12:21:00.4847822Z src/abnamro_bsrc_etl/validate/sources.py                            33      0      6      0   100%
2025-09-15T12:21:00.4848296Z src/abnamro_bsrc_etl/validate/transformations.py                   200     36     84      7    81%   66-72, 84->94, 97->102, 120, 135-136, 172->180, 307-317, 327-354, 477-478
2025-09-15T12:21:00.4848788Z src/abnamro_bsrc_etl/validate/validate_sql.py                       63      1     18      1    98%   87
2025-09-15T12:21:00.4849210Z src/abnamro_bsrc_etl/validate/yaml.py                               19      0      2      0   100%
2025-09-15T12:21:00.4849654Z ------------------------------------------------------------------------------------------------------------
2025-09-15T12:21:00.4850102Z TOTAL                                                             2133    166    488     38    90%
2025-09-15T12:21:00.4850468Z Coverage HTML written to dir htmlcov
2025-09-15T12:21:00.4850619Z 
2025-09-15T12:21:00.4851012Z =========================== short test summary info ============================
2025-09-15T12:21:00.4851589Z FAILED test/test_transform/test_pipeline_yaml_integrated_target.py::test_pipeline_yaml_integrated_target[parameters0-test_catalog.test_schema_20240801.testd1_test_target_table]
2025-09-15T12:21:00.4852162Z FAILED test/test_transform/test_pipeline_yaml_integrated_target.py::test_pipeline_yaml_pivot
2025-09-15T12:21:00.4852660Z FAILED test/test_transform/test_pipeline_yaml_integrated_target.py::test_run_mapping
2025-09-15T12:21:00.4853142Z FAILED test/test_utils/test_parse_yaml.py::test_parse_yaml[IHUB-FR1-202412-output0]
2025-09-15T12:21:00.4853590Z ============= 4 failed, 393 passed, 1 warning in 141.54s (0:02:21) =============
2025-09-15T12:21:00.8505646Z 
2025-09-15T12:21:00.8547722Z ##[error]Bash exited with code '1'.
2025-09-15T12:21:00.8737526Z ##[section]Finishing: Test with pytest
