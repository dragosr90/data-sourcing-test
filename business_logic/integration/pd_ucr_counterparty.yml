description: >
  Step 2 of PD-UCR: Apply facility-based rating propagation using CPxCF,
  ensuring counterparties under the same facility inherit ratings if needed.

target: int_{{ RUN_MONTH }}.{{ DELIVERY_ENTITY }}_pd_ucr_step2

sources:
  - alias: PD_UCR_STEP1
    columns:
      - DeliveryEntity
      - ReportingDate
      - CounterpartyID
      - CounterpartySourceSystemIdentifier
      - BcdbId
      - AacAlphaCode
      - GlobalCounterpartyIdentifier
      - PDModelCode
      - LastPerformingPDModelCode
      - ApprovedUniformCounterpartyRating
      - UCRStep1
      - ProbabilityOfDefaultBeforeConservatism
      - ProbabilityOfDefault
      - UniformCounterpartyRatingDate
      - UniformCounterpartyRatingExpiryDate
      - PDMarginOfConservatism
      - UCRCase
      - fairid
      - UniquePDRatingId
      - InterCompanyIndicator
    source: int_{{ RUN_MONTH }}.{{ DELIVERY_ENTITY }}_pd_ucr

  - alias: INT_CPXCF
    columns:
      - DeliveryEntity
      - ReportingDate
      - CreditFacility
      - CreditFacilitySourceSystemIdentifier
      - ParticipatingCounterparty
      - ParticipatingCounterpartySourceSystemIdentifier
      - CounterpartyRole
    source: int_{{ RUN_MONTH }}.{{ DELIVERY_ENTITY }}_integrated_cpxcf

  - alias: OTHER_CP_RATINGS
    columns:
      - CounterpartyID
      - CounterpartySourceSystemIdentifier
      - PDModelCode
      - LastPerformingPDModelCode
      - ApprovedUniformCounterpartyRating
      - UCRStep1
      - ProbabilityOfDefaultBeforeConservatism
      - ProbabilityOfDefault
      - UniformCounterpartyRatingDate
      - UniformCounterpartyRatingExpiryDate
      - PDMarginOfConservatism
      - UCRCase
      - fairid
      - UniquePDRatingId
    source: int_{{ RUN_MONTH }}.{{ DELIVERY_ENTITY }}_pd_ucr

transformations:
  - join:
      left_source: PD_UCR_STEP1
      right_source: INT_CPXCF
      condition:
        - PD_UCR_STEP1.CounterpartyID = INT_CPXCF.ParticipatingCounterparty
        - PD_UCR_STEP1.CounterpartySourceSystemIdentifier = INT_CPXCF.ParticipatingCounterpartySourceSystemIdentifier
      how: left

  - join:
      right_source: INT_CPXCF
      condition:
        - PD_UCR_STEP1.CreditFacility = INT_CPXCF.CreditFacility
        - PD_UCR_STEP1.CreditFacilitySourceSystemIdentifier = INT_CPXCF.CreditFacilitySourceSystemIdentifier
      how: left

  - join:
      right_source: OTHER_CP_RATINGS
      condition:
        - INT_CPXCF.ParticipatingCounterparty = OTHER_CP_RATINGS.CounterpartyID
        - INT_CPXCF.ParticipatingCounterpartySourceSystemIdentifier = OTHER_CP_RATINGS.CounterpartySourceSystemIdentifier
      how: left

  - add_variables:
      needs_rating: >
        CASE 
          WHEN PD_UCR_STEP1.UCRStep1 IS NULL
            OR (PD_UCR_STEP1.UniformCounterpartyRatingDate IS NOT NULL
                AND DATEADD(month, 12, PD_UCR_STEP1.UniformCounterpartyRatingDate) < PD_UCR_STEP1.ReportingDate)
          THEN 1 ELSE 0 END

      other_has_rating: >
        CASE
          WHEN OTHER_CP_RATINGS.UCRStep1 IS NOT NULL
            AND OTHER_CP_RATINGS.UniformCounterpartyRatingDate IS NOT NULL
            AND DATEADD(month, 12, OTHER_CP_RATINGS.UniformCounterpartyRatingDate) >= OTHER_CP_RATINGS.ReportingDate
          THEN 1 ELSE 0 END

  - aggregation:
      alias: FACILITY_RATINGS
      group:
        - PD_UCR_STEP1.DeliveryEntity
        - PD_UCR_STEP1.ReportingDate
        - PD_UCR_STEP1.CounterpartyID
        - PD_UCR_STEP1.CounterpartySourceSystemIdentifier
      column_mapping:
        best_pdmodelcode: MAX(OTHER_CP_RATINGS.PDModelCode)
        best_lastperformingpdmodelcode: MAX(OTHER_CP_RATINGS.LastPerformingPDModelCode)
        best_approveducr: MAX(OTHER_CP_RATINGS.ApprovedUniformCounterpartyRating)
        best_ucrstep1: MAX(OTHER_CP_RATINGS.UCRStep1)
        best_pd_before_cons: MAX(OTHER_CP_RATINGS.ProbabilityOfDefaultBeforeConservatism)
        best_pd: MAX(OTHER_CP_RATINGS.ProbabilityOfDefault)
        best_rating_date: MAX(OTHER_CP_RATINGS.UniformCounterpartyRatingDate)
        best_rating_expiry: MAX(OTHER_CP_RATINGS.UniformCounterpartyRatingExpiryDate)
        best_pd_margin: MAX(OTHER_CP_RATINGS.PDMarginOfConservatism)
        best_fairid: MAX(OTHER_CP_RATINGS.fairid)
        best_unique_pdratingid: MAX(OTHER_CP_RATINGS.UniquePDRatingId)
        best_ucrcase: MAX(OTHER_CP_RATINGS.UCRCase)

expressions:
  DeliveryEntity: PD_UCR_STEP1.DeliveryEntity
  ReportingDate: PD_UCR_STEP1.ReportingDate
  CounterpartyID: PD_UCR_STEP1.CounterpartyID
  CounterpartySourceSystemIdentifier: PD_UCR_STEP1.CounterpartySourceSystemIdentifier
  PDModelCode: COALESCE(FACILITY_RATINGS.best_pdmodelcode, PD_UCR_STEP1.PDModelCode)
  LastPerformingPDModelCode: COALESCE(FACILITY_RATINGS.best_lastperformingpdmodelcode, PD_UCR_STEP1.LastPerformingPDModelCode)
  ApprovedUniformCounterpartyRating: COALESCE(FACILITY_RATINGS.best_approveducr, PD_UCR_STEP1.ApprovedUniformCounterpartyRating)
  UCRStep1: COALESCE(FACILITY_RATINGS.best_ucrstep1, PD_UCR_STEP1.UCRStep1)
  ProbabilityOfDefaultBeforeConservatism: COALESCE(FACILITY_RATINGS.best_pd_before_cons, PD_UCR_STEP1.ProbabilityOfDefaultBeforeConservatism)
  ProbabilityOfDefault: COALESCE(FACILITY_RATINGS.best_pd, PD_UCR_STEP1.ProbabilityOfDefault)
  UniformCounterpartyRatingDate: COALESCE(FACILITY_RATINGS.best_rating_date, PD_UCR_STEP1.UniformCounterpartyRatingDate)
  UniformCounterpartyRatingExpiryDate: COALESCE(FACILITY_RATINGS.best_rating_expiry, PD_UCR_STEP1.UniformCounterpartyRatingExpiryDate)
  PDMarginOfConservatism: COALESCE(FACILITY_RATINGS.best_pd_margin, PD_UCR_STEP1.PDMarginOfConservatism)
  fairid: COALESCE(FACILITY_RATINGS.best_fairid, PD_UCR_STEP1.fairid)
  UniquePDRatingId: COALESCE(FACILITY_RATINGS.best_unique_pdratingid, PD_UCR_STEP1.UniquePDRatingId)
  UCRCase: COALESCE(FACILITY_RATINGS.best_ucrcase, PD_UCR_STEP1.UCRCase)

drop_duplicates: true
