description: Pipeline to preprocess FAIR data - Final fix to match RDF logic exactly

target: bsrc_d.int_{{ RUN_MONTH }}.fair_turnover

sources:
  - alias: UCR_ACTUAL
    columns:
      - COMPANY_ID
      - RATING_ID
      - RATING_STATUS
      - PARENT_COMPANY_ID
      - LB_RATING_ID
    source: int_{{ RUN_MONTH }}.pd_ucr_actual
  
  - alias: PD_ITERATIONS
    columns:
      - RATING_ID
      - RECOMMENDED
      - ITERATION_NUMBER
    # NO FILTER - Use all iterations like RDF does
    source: stg_{{ RUN_MONTH }}.dial_fair_pd_iterations
  
  - alias: MODEL_ESSENTIALS
    columns:
      - RATING_ID
      - CALCULATION_PERIOD_ID
      - MODEL_COMPONENT_ESSENTIAL_TYPE_CODE
      - MODEL_COMPONENT_ESSENTIAL_VALUE
      - MODEL_COMPONENT_ESSENTIAL_CATEGORY_VARIANT_ID
      - ITERATION_NUMBER
    filter: MODEL_COMPONENT_ESSENTIAL_TYPE_CODE IN ('CorrectedTotalAssets', 'TotalBalanceSheet', 'Assets', 'TotalAssets', 'TotalTurnoverTurnover', 'Turnover', 'Budget', 'Revenues', 'TotalRevenues', 'TotalOperatingIncome') AND MODEL_COMPONENT_ESSENTIAL_CATEGORY_VARIANT_ID = 'cons'
    source: stg_{{ RUN_MONTH }}.dial_fair_pd_model_component_essentials
  
  - alias: LBR_QUANTITATIVE
    columns:
      - LB_RATING_ID
      - DATA_TYPE
      - TOTAL_ASSETS
      - NET_INTEREST_YIELD
      - OTHER_OPERATING_INCOME
    filter: DATA_TYPE = 2
    source: stg_{{ RUN_MONTH }}.dial_fair_lbr_quantitative_input

transformations:
  # Step 1: First get model essentials with their iterations
  # Join PD_ITERATIONS with MODEL_ESSENTIALS
  - join:
      left_source: MODEL_ESSENTIALS
      right_source: PD_ITERATIONS
      condition:
        - MODEL_ESSENTIALS.RATING_ID = PD_ITERATIONS.RATING_ID
        - MODEL_ESSENTIALS.ITERATION_NUMBER = PD_ITERATIONS.ITERATION_NUMBER
      how: inner
      alias: MODEL_WITH_ITER
  
  # Step 2: Pivot model essentials by type
  - pivot:
      alias: PIVOTED_ESSENTIALS
      source: MODEL_WITH_ITER
      group_cols:
        - MODEL_WITH_ITER.RATING_ID
        - MODEL_WITH_ITER.ITERATION_NUMBER
        - MODEL_WITH_ITER.RECOMMENDED
      pivot_col: MODEL_WITH_ITER.MODEL_COMPONENT_ESSENTIAL_TYPE_CODE
      pivot_value_col: MODEL_WITH_ITER.MODEL_COMPONENT_ESSENTIAL_VALUE
      column_mapping:
        CorrectedTotalAssets: first
        TotalBalanceSheet: first
        Assets: first
        TotalAssets: first
        TotalTurnoverTurnover: first
        Turnover: first
        Budget: first
        Revenues: first
        TotalRevenues: first
        TotalOperatingIncome: first
  
  # Step 3: Get first iteration per rating (prioritize any available data)
  - aggregation:
      alias: FIRST_ITER_DATA
      source: PIVOTED_ESSENTIALS
      group:
        - PIVOTED_ESSENTIALS.RATING_ID
      column_mapping:
        TotalAssets_calc: first(COALESCE(PIVOTED_ESSENTIALS.CorrectedTotalAssets, PIVOTED_ESSENTIALS.TotalBalanceSheet, PIVOTED_ESSENTIALS.Assets, PIVOTED_ESSENTIALS.TotalAssets))
        Turnover_calc: first(COALESCE(PIVOTED_ESSENTIALS.TotalTurnoverTurnover, PIVOTED_ESSENTIALS.Turnover, PIVOTED_ESSENTIALS.Budget, PIVOTED_ESSENTIALS.Revenues, PIVOTED_ESSENTIALS.TotalRevenues, PIVOTED_ESSENTIALS.TotalOperatingIncome))
  
  # Step 4: Join with UCR_ACTUAL
  - join:
      left_source: UCR_ACTUAL
      right_source: FIRST_ITER_DATA
      condition:
        - UCR_ACTUAL.RATING_ID = FIRST_ITER_DATA.RATING_ID
      how: left
      alias: UCR_WITH_MODEL
  
  # Step 5: Join with LBR data
  - join:
      left_source: UCR_WITH_MODEL
      right_source: LBR_QUANTITATIVE
      condition:
        - UCR_WITH_MODEL.LB_RATING_ID = LBR_QUANTITATIVE.LB_RATING_ID
      how: left

expressions:
  RatingID: UCR_WITH_MODEL.RATING_ID
  # Simple hierarchy: LBR if available, otherwise model data
  AnnualTurnover: COALESCE(
    CASE 
      WHEN LBR_QUANTITATIVE.NET_INTEREST_YIELD IS NOT NULL AND LBR_QUANTITATIVE.OTHER_OPERATING_INCOME IS NOT NULL 
      THEN CAST((LBR_QUANTITATIVE.NET_INTEREST_YIELD + LBR_QUANTITATIVE.OTHER_OPERATING_INCOME) * 1000000000 AS STRING) 
    END, 
    UCR_WITH_MODEL.Turnover_calc
    )
  AnnualTurnoverDirect: UCR_WITH_MODEL.Turnover_calc
  AnnualTurnoverLBR: CASE 
    WHEN LBR_QUANTITATIVE.NET_INTEREST_YIELD IS NOT NULL AND LBR_QUANTITATIVE.OTHER_OPERATING_INCOME IS NOT NULL 
    THEN CAST((LBR_QUANTITATIVE.NET_INTEREST_YIELD + LBR_QUANTITATIVE.OTHER_OPERATING_INCOME) * 1000000000 AS STRING) 
    END
  TotalAssets: COALESCE(
    CASE 
      WHEN LBR_QUANTITATIVE.TOTAL_ASSETS IS NOT NULL 
      THEN CAST(LBR_QUANTITATIVE.TOTAL_ASSETS * 1000000000 AS STRING) 
    END, 
    UCR_WITH_MODEL.TotalAssets_calc
    )
  TotalAssetsDirect: UCR_WITH_MODEL.TotalAssets_calc
  TotalAssetsLBR: CASE 
    WHEN LBR_QUANTITATIVE.TOTAL_ASSETS IS NOT NULL 
    THEN CAST(LBR_QUANTITATIVE.TOTAL_ASSETS * 1000000000 AS STRING) 
    END
  # Source tracking
  TurnoverSource: CASE
    WHEN LBR_QUANTITATIVE.NET_INTEREST_YIELD IS NOT NULL AND LBR_QUANTITATIVE.OTHER_OPERATING_INCOME IS NOT NULL THEN 'LBR'
    WHEN UCR_WITH_MODEL.Turnover_calc IS NOT NULL THEN 'Direct'
    ELSE 'None'
    END
  AssetsSource: CASE
    WHEN LBR_QUANTITATIVE.TOTAL_ASSETS IS NOT NULL THEN 'LBR'
    WHEN UCR_WITH_MODEL.TotalAssets_calc IS NOT NULL THEN 'Direct'
    ELSE 'None'
    END

drop_duplicates: true
