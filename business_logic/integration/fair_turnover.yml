description: FAIR logic data processing - joining PD UCR actual data with iterations, model components, and LBR quantitative input

target: int_{{ RUN_MONTH }}.fair_turnover

sources:
  - alias: PD_UCR_ACTUAL
    columns:
    - COMPANY_ID
    - RATING_ID
    - RATING_STATUS
    - PARENT_COMPANY_ID
    - LB_RATING_ID
    source: int_{{ RUN_MONTH }}.pd_ucr_actual

  - alias: PD_ITERATIONS
    columns:
    - RATING_ID
    - RECOMMENDED
    - ITERATION_NUMBER
    filter: RECOMMENDED = 'y'
    source: stg_{{ RUN_MONTH }}.dial_fair_pd_iterations

  - alias: MODEL_COMPONENTS
    columns:
    - RATING_ID
    - CALCULATION_PERIOD_ID
    - MODEL_COMPONENT_ESSENTIAL_TYPE_CODE
    - MODEL_COMPONENT_ESSENTIAL_VALUE
    - MODEL_COMPONENT_ESSENTIAL_CATEGORY_VARIANT_ID
    - ITERATION_NUMBER
    filter: MODEL_COMPONENT_ESSENTIAL_TYPE_CODE in ('CorrectedTotalAssets', 'TotalBalanceSheet', 'Assets', 'TotalAssets', 'TotalTurnoverTurnover', 'Turnover', 'Budget', 'Revenues', 'TotalRevenues', 'TotalOperatingIncome') AND MODEL_COMPONENT_ESSENTIAL_CATEGORY_VARIANT_ID = 'cons'
    source: stg_{{ RUN_MONTH }}.dial_fair_pd_model_component_essentials

  - alias: LBR_QUANT_INPUT
    columns:
    - LB_RATING_ID
    - DATA_TYPE
    - TOTAL_ASSETS
    - NET_INTEREST_YIELD
    - OTHER_OPERATING_INCOME
    filter: DATA_TYPE = 2
    source: stg_{{ RUN_MONTH }}.dial_fair_lbr_quantitative_input

transformations:
  # Step 1: Inner join iterations with model components on ITERATION_NUMBER
  - join:
      left_source: PD_ITERATIONS
      right_source: MODEL_COMPONENTS
      condition:
      - PD_ITERATIONS.ITERATION_NUMBER = MODEL_COMPONENTS.ITERATION_NUMBER
      - PD_ITERATIONS.RATING_ID = MODEL_COMPONENTS.RATING_ID
      how: inner

  # Step 2: Join with PD_UCR_ACTUAL on RATING_ID
  - join:
      right_source: PD_UCR_ACTUAL
      condition:
      - PD_ITERATIONS.RATING_ID = PD_UCR_ACTUAL.RATING_ID
      how: inner

  # Step 3: Pivot MODEL_COMPONENT_ESSENTIAL_TYPE_CODE to columns
  - pivot:
      alias: PIVOTED_COMPONENTS
      group_cols: 
      - PD_UCR_ACTUAL.RATING_ID
      - PD_UCR_ACTUAL.COMPANY_ID
      - PD_UCR_ACTUAL.PARENT_COMPANY_ID
      - PD_UCR_ACTUAL.RATING_STATUS
      - PD_UCR_ACTUAL.LB_RATING_ID
      pivot_col: MODEL_COMPONENTS.MODEL_COMPONENT_ESSENTIAL_TYPE_CODE
      pivot_value_col: MODEL_COMPONENTS.MODEL_COMPONENT_ESSENTIAL_VALUE
      column_mapping:
        CorrectedTotalAssets: first
        TotalBalanceSheet: first
        Assets: first
        TotalAssets: first
        TotalTurnoverTurnover: first
        Turnover: first
        Budget: first
        Revenues: first
        TotalRevenues: first
        TotalOperatingIncome: first

  # Step 4: Add variables to derive Total Assets and Turnover values
  - add_variables:
      column_mapping:
        var_total_assets: coalesce(PIVOTED_COMPONENTS.CorrectedTotalAssets, PIVOTED_COMPONENTS.TotalBalanceSheet, PIVOTED_COMPONENTS.Assets, PIVOTED_COMPONENTS.TotalAssets)
        var_turnover: coalesce(PIVOTED_COMPONENTS.TotalTurnoverTurnover, PIVOTED_COMPONENTS.Turnover, PIVOTED_COMPONENTS.Budget, PIVOTED_COMPONENTS.Revenues, PIVOTED_COMPONENTS.TotalRevenues, PIVOTED_COMPONENTS.TotalOperatingIncome)

  # Create Direct alias using aggregation (no actual aggregation, just to create alias)
  - aggregation:
      alias: DIRECT
      group:
      - PIVOTED_COMPONENTS.RATING_ID
      - PIVOTED_COMPONENTS.COMPANY_ID
      - PIVOTED_COMPONENTS.PARENT_COMPANY_ID
      - PIVOTED_COMPONENTS.RATING_STATUS
      - PIVOTED_COMPONENTS.LB_RATING_ID
      column_mapping:
        total_assets: first(var_total_assets)
        turnover: first(var_turnover)
        
  # Create Parent alias using aggregation
  - aggregation:
      alias: PARENT
      source: DIRECT
      group:
      - DIRECT.RATING_ID
      - DIRECT.COMPANY_ID
      - DIRECT.PARENT_COMPANY_ID
      - DIRECT.RATING_STATUS
      - DIRECT.LB_RATING_ID
      column_mapping:
        total_assets: first(DIRECT.total_assets)
        turnover: first(DIRECT.turnover)

  # Step 5: Join Direct on Parent where Direct.COMPANY_ID = Parent.COMPANY_ID
  - join:
      left_source: DIRECT
      right_source: PARENT
      condition:
      - DIRECT.COMPANY_ID = PARENT.COMPANY_ID
      how: left

  # Step 6: Join with LBR quantitative input and add variables
  - join:
      right_source: LBR_QUANT_INPUT
      condition:
      - DIRECT.LB_RATING_ID = LBR_QUANT_INPUT.LB_RATING_ID
      how: left
      
  - add_variables:
      column_mapping:
        var_total_assets_lbr: cast(LBR_QUANT_INPUT.TOTAL_ASSETS * 1000000000 as string)
        var_turnover_lbr: cast((LBR_QUANT_INPUT.NET_INTEREST_YIELD + LBR_QUANT_INPUT.OTHER_OPERATING_INCOME) * 1000000000 as string)

# Step 7: Final expressions for target structure
expressions:
  RatingID: DIRECT.RATING_ID
  ParentRatingID: PARENT.RATING_ID
  LBRatingID: LBR_QUANT_INPUT.LB_RATING_ID
  AnnualTurnover: coalesce(var_turnover_lbr, PARENT.turnover, DIRECT.turnover)
  AnnualTurnoverDirect: DIRECT.turnover
  AnnualTurnoverParent: PARENT.turnover
  AnnualTurnoverLBR: var_turnover_lbr
  TotalAssets: coalesce(var_total_assets_lbr, PARENT.total_assets, DIRECT.total_assets)
  TotalAssetsDirect: DIRECT.total_assets
  TotalAssetsParent: PARENT.total_assets
  TotalAssetsLBR: var_total_assets_lbr
