-- Diagnose why records with LBR data are missing from FAIR output
-- Replace {{ RUN_MONTH }} with actual value

-- 1. Check if these specific RatingIDs exist in the source tables
WITH test_ratings AS (
    SELECT 2853256 as RatingID UNION ALL
    SELECT 2836723 UNION ALL
    SELECT 2853787
)
SELECT 
    tr.RatingID,
    CASE WHEN ucr.RATING_ID IS NOT NULL THEN 'Yes' ELSE 'No' END as In_UCR_ACTUAL,
    CASE WHEN iter.RATING_ID IS NOT NULL THEN 'Yes' ELSE 'No' END as In_PD_ITERATIONS,
    CASE WHEN iter.RECOMMENDED = 'y' THEN 'Yes' ELSE 'No' END as Is_Recommended,
    CASE WHEN ess.RATING_ID IS NOT NULL THEN 'Yes' ELSE 'No' END as In_MODEL_ESSENTIALS,
    ucr.LB_RATING_ID,
    CASE WHEN lbr.LB_RATING_ID IS NOT NULL THEN 'Yes' ELSE 'No' END as Has_LBR_Data
FROM test_ratings tr
LEFT JOIN bsrc_d.int_{{ RUN_MONTH }}.pd_ucr_actual ucr ON tr.RatingID = ucr.RATING_ID
LEFT JOIN bsrc_d.stg_{{ RUN_MONTH }}.dial_fair_pd_iterations iter ON tr.RatingID = iter.RATING_ID
LEFT JOIN bsrc_d.stg_{{ RUN_MONTH }}.dial_fair_pd_model_component_essentials ess 
    ON tr.RatingID = ess.RATING_ID 
    AND ess.MODEL_COMPONENT_ESSENTIAL_TYPE_CODE IN ('CorrectedTotalAssets', 'TotalBalanceSheet', 'Assets', 'TotalAssets', 'TotalTurnoverTurnover', 'Turnover', 'Budget', 'Revenues', 'TotalRevenues', 'TotalOperatingIncome')
    AND ess.MODEL_COMPONENT_ESSENTIAL_CATEGORY_VARIANT_ID = 'cons'
LEFT JOIN bsrc_d.stg_{{ RUN_MONTH }}.dial_fair_lbr_quantitative_input lbr 
    ON ucr.LB_RATING_ID = lbr.LB_RATING_ID 
    AND lbr.DATA_TYPE = 2;

-- 2. Check if these RatingIDs are in FAIR output
SELECT 
    'RatingIDs with LBR in FAIR output' as Check_Type,
    COUNT(*) as Count
FROM bsrc_d.int_{{ RUN_MONTH }}.fair_turnover
WHERE RatingID IN (2853256, 2836723, 2853787);

-- 3. Check the overall flow - how many records make it through each step
SELECT 'Records in UCR_ACTUAL' as Step, COUNT(DISTINCT RATING_ID) as Count
FROM bsrc_d.int_{{ RUN_MONTH }}.pd_ucr_actual
UNION ALL
SELECT 'Records with recommended iterations' as Step, COUNT(DISTINCT RATING_ID) as Count
FROM bsrc_d.stg_{{ RUN_MONTH }}.dial_fair_pd_iterations
WHERE RECOMMENDED = 'y'
UNION ALL
SELECT 'Records with model essentials' as Step, COUNT(DISTINCT RATING_ID) as Count
FROM bsrc_d.stg_{{ RUN_MONTH }}.dial_fair_pd_model_component_essentials
WHERE MODEL_COMPONENT_ESSENTIAL_TYPE_CODE IN ('CorrectedTotalAssets', 'TotalBalanceSheet', 'Assets', 'TotalAssets', 'TotalTurnoverTurnover', 'Turnover', 'Budget', 'Revenues', 'TotalRevenues', 'TotalOperatingIncome')
AND MODEL_COMPONENT_ESSENTIAL_CATEGORY_VARIANT_ID = 'cons'
UNION ALL
SELECT 'Records in FAIR output' as Step, COUNT(DISTINCT RatingID) as Count
FROM bsrc_d.int_{{ RUN_MONTH }}.fair_turnover
UNION ALL
SELECT 'Records in FAIR with non-null LBR' as Step, COUNT(DISTINCT RatingID) as Count
FROM bsrc_d.int_{{ RUN_MONTH }}.fair_turnover
WHERE AnnualTurnoverLBR IS NOT NULL AND AnnualTurnoverLBR != 'null';

-- 4. Find records that have LBR data but are missing from FAIR output
WITH ucr_with_lbr AS (
    SELECT DISTINCT ucr.RATING_ID
    FROM bsrc_d.int_{{ RUN_MONTH }}.pd_ucr_actual ucr
    INNER JOIN bsrc_d.stg_{{ RUN_MONTH }}.dial_fair_lbr_quantitative_input lbr
        ON ucr.LB_RATING_ID = lbr.LB_RATING_ID
    WHERE lbr.DATA_TYPE = 2
)
SELECT 
    'UCR records with LBR data' as Category,
    COUNT(*) as Total_Count,
    SUM(CASE WHEN f.RatingID IS NOT NULL THEN 1 ELSE 0 END) as In_FAIR_Output,
    SUM(CASE WHEN f.RatingID IS NULL THEN 1 ELSE 0 END) as Missing_From_FAIR
FROM ucr_with_lbr uwl
LEFT JOIN bsrc_d.int_{{ RUN_MONTH }}.fair_turnover f ON uwl.RATING_ID = f.RatingID;

-- 5. Sample of UCR records with LBR that are missing from output
WITH ucr_with_lbr AS (
    SELECT ucr.RATING_ID, ucr.LB_RATING_ID
    FROM bsrc_d.int_{{ RUN_MONTH }}.pd_ucr_actual ucr
    INNER JOIN bsrc_d.stg_{{ RUN_MONTH }}.dial_fair_lbr_quantitative_input lbr
        ON ucr.LB_RATING_ID = lbr.LB_RATING_ID
    WHERE lbr.DATA_TYPE = 2
)
SELECT uwl.RATING_ID, uwl.LB_RATING_ID, 'Has LBR but missing from FAIR' as Status
FROM ucr_with_lbr uwl
WHERE NOT EXISTS (SELECT 1 FROM bsrc_d.int_{{ RUN_MONTH }}.fair_turnover f WHERE f.RatingID = uwl.RATING_ID)
LIMIT 10;
