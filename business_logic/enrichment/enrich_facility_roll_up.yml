target: enrich_{{ RUN_MONTH }}.enrich_facility_roll_up

sources:
  - alias: CF1
    filter: delivery_entity in ('AACF_REPT','ALFAM_REPT','ENTRACARD_REPT','FBS_REPT','IHUB-BE1_REPT','IHUB-DE2_CALC','IHUB-FR1_CALC','LEASE_REPT','VIENNA_REPT')
            and parentcreditfacility<>localfacilityidentifier
    source: int_{{ RUN_MONTH }}.int_ssf_cf
  - alias: CF2
    filter: delivery_entity in ('AACF_REPT','ALFAM_REPT','ENTRACARD_REPT','FBS_REPT','IHUB-BE1_REPT','IHUB-DE2_CALC','IHUB-FR1_CALC','LEASE_REPT','VIENNA_REPT')
    source: int_{{ RUN_MONTH }}.int_ssf_cf
  - alias: CF3
    filter: delivery_entity in ('AACF_REPT','ALFAM_REPT','ENTRACARD_REPT','FBS_REPT','IHUB-BE1_REPT','IHUB-DE2_CALC','IHUB-FR1_CALC','LEASE_REPT','VIENNA_REPT')
    source: int_{{ RUN_MONTH }}.int_ssf_cf
  - alias: CF4
    filter: delivery_entity in ('AACF_REPT','ALFAM_REPT','ENTRACARD_REPT','FBS_REPT','IHUB-BE1_REPT','IHUB-DE2_CALC','IHUB-FR1_CALC','LEASE_REPT','VIENNA_REPT')
    source: int_{{ RUN_MONTH }}.int_ssf_cf

transformations:
  - join:
      left_source: CF1
      right_source: CF2
      condition:
        - CF1.reporting_date = CF2.reporting_date
        - CF1.parentcreditfacility = CF2.localfacilityidentifier
        - CF1.parentcreditfacilityssid = CF2.sourcesystemidentifier
      how: left 
  - join:
      right_source: CF3
      condition:
        - CF2.reporting_date = CF3.reporting_date
        - CF2.parentcreditfacility = CF3.localfacilityidentifier
        - CF2.parentcreditfacilityssid = CF3.sourcesystemidentifier
      how: left 
  - join:
      right_source: CF4
      condition:
        - CF3.reporting_date = CF4.reporting_date
        - CF3.parentcreditfacility = CF4.localfacilityidentifier
        - CF3.parentcreditfacilityssid = CF4.sourcesystemidentifier
      how: left 
  - add_variables:
      column_mapping:
        var_delivery_entity: substr(CF1.delivery_entity,1,length(CF1.delivery_entity)-5)


expressions:
  reporting_date: CF1.reporting_date
  delivery_entity_orig: CF1.delivery_entity
  delivery_entity: var_delivery_entity
  localfacilityidentifier: CF1.localfacilityidentifier
  parentcreditfacility: CF1.parentcreditfacility
  highest_existing_facility: coalesce(CF4.localfacilityidentifier,CF3.localfacilityidentifier,CF2.localfacilityidentifier,CF1.localfacilityidentifier)
  highest_facility_explained: case  when CF4.localfacilityidentifier is not null then 'level 3 parent found'
                                    when CF3.parentcreditfacility is not null then 'level 3 parent not found'
                                    when CF3.localfacilityidentifier is not null then 'level 2 parent found'
                                    when CF2.parentcreditfacility is not null then 'level 2 parent not found'
                                    when CF2.localfacilityidentifier is not null then 'level 1 parent found'
                                    when CF1.parentcreditfacility is not null then 'level 1 parent not found'
                              end
  sub_facility_flg: case when CF2.localfacilityidentifier is not null then 1 else 0 end
