# ----- CORRECTLY FORMATTED YAML WITH WINDOW FUNCTIONS -----
target: int_{{ RUN_MONTH }}.pd_ucr_actual

sources:
  - alias: DIAL_FAIR_PD_UCR
    columns:
    - PD_RATING_ID
    - COMPANY_ID
    - RATING_STATUS
    - RATING_PROVIDING_SYSTEM
    - PD_MODEL_VERSION
    - STAND_ALONE_RATING_PD
    - STAND_ALONE_RATING_UCR
    - COUNTRY_RISK_ADJUSTED_PD
    - COUNTRY_RISK_ADJUSTED_UCR
    - GROUP_SUPPORT_ADJUSTED_PD
    - GROUP_SUPPORT_ADJUSTED_UCR
    - L1_OVERRIDE_PD
    - L1_OVERRIDE_UCR
    - PROPOSED_PD
    - PROPOSED_UCR
    - L2_OVERRIDE_PD
    - L2_OVERRIDE_UCR
    - APPROVED_PD
    - APPROVED_UCR
    - PD_APPROVAL_DATE
    - PD_EXPIRY_DATE
    - FAIR_ID
    - LBCDB_ID
    - GBCDB_ID
    - HREKNR
    - RAPID_ID
    - T24_ID
    - DUNS
    - GRACE_ID
    - CS_ID
    - COUNTRY_CODE
    - PORTFOLIO
    - BUSINESSLINE
    - RATING_ID
    - PARENT_COMPANY_ID
    - PARENT_RATING_REVIEW_ALERT
    - SOVEREIGN_RATING_REVIEW_ALERT
    - USED_FINANCIALS_EXPIRATION_ALERT
    - PD_INCLUDING_CONSERVATISM
    - UCR_INCLUDING_CONSERVATISM
    - TYPE_OF_CONSERVATISM
    - MARGIN_OF_CONSERVATISM
    - PD_FLOORED
    - PROPOSER
    - APPROVER
    - LB_RATING_ID
    source: stg_{{ RUN_MONTH }}.dial_fair_pd_ucr

  # Historical performing ratings (UCR not in 6,7,8) with proper filtering
  - alias: HIST_PERF_RATINGS
    columns:
    - COMPANY_ID
    - PD_MODEL_VERSION
    - APPROVED_UCR
    - PD_APPROVAL_DATE
    - PORTFOLIO
    - BUSINESSLINE
    - RATING_ID
    source: stg_{{ RUN_MONTH }}.dial_fair_pd_ucr
    filter: APPROVED_UCR NOT IN ('6', '7', '8')

  # All historical ratings for fallback
  - alias: HIST_ALL_RATINGS
    columns:
    - COMPANY_ID
    - PD_MODEL_VERSION
    - RATING_ID
    - PORTFOLIO
    - BUSINESSLINE
    source: stg_{{ RUN_MONTH }}.dial_fair_pd_ucr

transformations:
  # Create variables for filtering
  - add_variables:
      source: DIAL_FAIR_PD_UCR
      column_mapping:
        var_months_since_approval: months_between(current_date(), DIAL_FAIR_PD_UCR.PD_APPROVAL_DATE)
  
  # Add window functions for finding most recent performing ratings
  - add_variables:
      source: HIST_PERF_RATINGS
      column_mapping:
        most_recent_date_by_group: max(PD_APPROVAL_DATE) over (partition by COMPANY_ID, PORTFOLIO, BUSINESSLINE)
        is_most_recent: case when PD_APPROVAL_DATE = max(PD_APPROVAL_DATE) over (partition by COMPANY_ID, PORTFOLIO, BUSINESSLINE) then 1 else 0 end
        rating_rank: row_number() over (partition by COMPANY_ID, PORTFOLIO, BUSINESSLINE, PD_APPROVAL_DATE order by RATING_ID desc)
        is_best_performing: case when is_most_recent = 1 and rating_rank = 1 then 1 else 0 end
  
  # Create a new table with just the best performing models
  - aggregation:
      alias: BEST_PERFORMING_MODELS
      source: HIST_PERF_RATINGS
      filter: is_best_performing = 1
      group:
      - HIST_PERF_RATINGS.COMPANY_ID
      - HIST_PERF_RATINGS.PORTFOLIO
      - HIST_PERF_RATINGS.BUSINESSLINE
      column_mapping:
        last_performing_model: first(HIST_PERF_RATINGS.PD_MODEL_VERSION)
  
  # Add window functions for finding records with minimum RATING_ID
  - add_variables:
      source: HIST_ALL_RATINGS
      column_mapping:
        min_rating_id_by_group: min(RATING_ID) over (partition by COMPANY_ID, PORTFOLIO, BUSINESSLINE)
        is_min_rating: case when RATING_ID = min(RATING_ID) over (partition by COMPANY_ID, PORTFOLIO, BUSINESSLINE) then 1 else 0 end
  
  # Create a new table with just the fallback models (PD_MODEL_VERSION from record with lowest RATING_ID)
  - aggregation:
      alias: FALLBACK_MODELS
      source: HIST_ALL_RATINGS
      filter: is_min_rating = 1
      group:
      - HIST_ALL_RATINGS.COMPANY_ID
      - HIST_ALL_RATINGS.PORTFOLIO
      - HIST_ALL_RATINGS.BUSINESSLINE
      column_mapping:
        fallback_model: first(HIST_ALL_RATINGS.PD_MODEL_VERSION)
  
  # Join best performing models to main data
  - join:
      left_source: DIAL_FAIR_PD_UCR
      right_source: BEST_PERFORMING_MODELS
      how: left
      condition:
      - DIAL_FAIR_PD_UCR.COMPANY_ID = BEST_PERFORMING_MODELS.COMPANY_ID
      - DIAL_FAIR_PD_UCR.PORTFOLIO = BEST_PERFORMING_MODELS.PORTFOLIO
      - DIAL_FAIR_PD_UCR.BUSINESSLINE = BEST_PERFORMING_MODELS.BUSINESSLINE
  
  # Join fallback models to main data
  - join:
      right_source: FALLBACK_MODELS
      how: left
      condition:
      - DIAL_FAIR_PD_UCR.COMPANY_ID = FALLBACK_MODELS.COMPANY_ID
      - DIAL_FAIR_PD_UCR.PORTFOLIO = FALLBACK_MODELS.PORTFOLIO
      - DIAL_FAIR_PD_UCR.BUSINESSLINE = FALLBACK_MODELS.BUSINESSLINE

expressions:
  PD_RATING_ID: DIAL_FAIR_PD_UCR.PD_RATING_ID
  COMPANY_ID: DIAL_FAIR_PD_UCR.COMPANY_ID
  RATING_STATUS: DIAL_FAIR_PD_UCR.RATING_STATUS
  RATING_PROVIDING_SYSTEM: DIAL_FAIR_PD_UCR.RATING_PROVIDING_SYSTEM
  PD_MODEL_VERSION: DIAL_FAIR_PD_UCR.PD_MODEL_VERSION
  STAND_ALONE_RATING_PD: DIAL_FAIR_PD_UCR.STAND_ALONE_RATING_PD
  STAND_ALONE_RATING_UCR: DIAL_FAIR_PD_UCR.STAND_ALONE_RATING_UCR
  COUNTRY_RISK_ADJUSTED_PD: DIAL_FAIR_PD_UCR.COUNTRY_RISK_ADJUSTED_PD
  COUNTRY_RISK_ADJUSTED_UCR: DIAL_FAIR_PD_UCR.COUNTRY_RISK_ADJUSTED_UCR
  GROUP_SUPPORT_ADJUSTED_PD: DIAL_FAIR_PD_UCR.GROUP_SUPPORT_ADJUSTED_PD
  GROUP_SUPPORT_ADJUSTED_UCR: DIAL_FAIR_PD_UCR.GROUP_SUPPORT_ADJUSTED_UCR
  L1_OVERRIDE_PD: DIAL_FAIR_PD_UCR.L1_OVERRIDE_PD
  L1_OVERRIDE_UCR: DIAL_FAIR_PD_UCR.L1_OVERRIDE_UCR
  PROPOSED_PD: DIAL_FAIR_PD_UCR.PROPOSED_PD
  PROPOSED_UCR: DIAL_FAIR_PD_UCR.PROPOSED_UCR
  L2_OVERRIDE_PD: DIAL_FAIR_PD_UCR.L2_OVERRIDE_PD
  L2_OVERRIDE_UCR: DIAL_FAIR_PD_UCR.L2_OVERRIDE_UCR
  APPROVED_PD: DIAL_FAIR_PD_UCR.APPROVED_PD
  APPROVED_UCR: DIAL_FAIR_PD_UCR.APPROVED_UCR
  PD_APPROVAL_DATE: DIAL_FAIR_PD_UCR.PD_APPROVAL_DATE
  PD_EXPIRY_DATE: DIAL_FAIR_PD_UCR.PD_EXPIRY_DATE
  FAIR_ID: DIAL_FAIR_PD_UCR.FAIR_ID
  LBCDB_ID: DIAL_FAIR_PD_UCR.LBCDB_ID
  GBCDB_ID: DIAL_FAIR_PD_UCR.GBCDB_ID
  HREKNR: DIAL_FAIR_PD_UCR.HREKNR
  RAPID_ID: DIAL_FAIR_PD_UCR.RAPID_ID
  T24_ID: DIAL_FAIR_PD_UCR.T24_ID
  DUNS: DIAL_FAIR_PD_UCR.DUNS
  GRACE_ID: DIAL_FAIR_PD_UCR.GRACE_ID
  CS_ID: DIAL_FAIR_PD_UCR.CS_ID
  COUNTRY_CODE: DIAL_FAIR_PD_UCR.COUNTRY_CODE
  PORTFOLIO: DIAL_FAIR_PD_UCR.PORTFOLIO
  BUSINESSLINE: DIAL_FAIR_PD_UCR.BUSINESSLINE
  RATING_ID: DIAL_FAIR_PD_UCR.RATING_ID
  PARENT_COMPANY_ID: DIAL_FAIR_PD_UCR.PARENT_COMPANY_ID
  PARENT_RATING_REVIEW_ALERT: DIAL_FAIR_PD_UCR.PARENT_RATING_REVIEW_ALERT
  SOVEREIGN_RATING_REVIEW_ALERT: DIAL_FAIR_PD_UCR.SOVEREIGN_RATING_REVIEW_ALERT
  USED_FINANCIALS_EXPIRATION_ALERT: DIAL_FAIR_PD_UCR.USED_FINANCIALS_EXPIRATION_ALERT
  PD_INCLUDING_CONSERVATISM: DIAL_FAIR_PD_UCR.PD_INCLUDING_CONSERVATISM
  UCR_INCLUDING_CONSERVATISM: DIAL_FAIR_PD_UCR.UCR_INCLUDING_CONSERVATISM
  TYPE_OF_CONSERVATISM: DIAL_FAIR_PD_UCR.TYPE_OF_CONSERVATISM
  MARGIN_OF_CONSERVATISM: DIAL_FAIR_PD_UCR.MARGIN_OF_CONSERVATISM
  PD_FLOORED: DIAL_FAIR_PD_UCR.PD_FLOORED
  PROPOSER: DIAL_FAIR_PD_UCR.PROPOSER
  APPROVER: DIAL_FAIR_PD_UCR.APPROVER
  LB_RATING_ID: DIAL_FAIR_PD_UCR.LB_RATING_ID
  
  # Last Performing Model logic 
  LastPerformingModel: >
    CASE 
      WHEN DIAL_FAIR_PD_UCR.APPROVED_UCR not in ('6', '7', '8') THEN DIAL_FAIR_PD_UCR.PD_MODEL_VERSION 
      WHEN BEST_PERFORMING_MODELS.last_performing_model IS NOT NULL THEN BEST_PERFORMING_MODELS.last_performing_model 
      WHEN FALLBACK_MODELS.fallback_model IS NOT NULL THEN FALLBACK_MODELS.fallback_model
      ELSE DIAL_FAIR_PD_UCR.PD_MODEL_VERSION  -- Ultimate fallback to current record's model version
    END

filter_target:
  - DIAL_FAIR_PD_UCR.RATING_STATUS = 'ACTUAL' AND (months_between(current_date(), DIAL_FAIR_PD_UCR.PD_APPROVAL_DATE) < 24 OR DIAL_FAIR_PD_UCR.APPROVED_UCR IN ('6', '7', '8'))

drop_duplicates: true
