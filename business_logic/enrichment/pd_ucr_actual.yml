target: int_{{ RUN_MONTH }}.pd_ucr_actual

sources:
  - alias: DIAL_FAIR_PD_UCR
    columns:
    - PD_RATING_ID
    - COMPANY_ID
    - RATING_STATUS
    - RATING_PROVIDING_SYSTEM
    - PD_MODEL_VERSION
    - STAND_ALONE_RATING_PD
    - STAND_ALONE_RATING_UCR
    - COUNTRY_RISK_ADJUSTED_PD
    - COUNTRY_RISK_ADJUSTED_UCR
    - GROUP_SUPPORT_ADJUSTED_PD
    - GROUP_SUPPORT_ADJUSTED_UCR
    - L1_OVERRIDE_PD
    - L1_OVERRIDE_UCR
    - PROPOSED_PD
    - PROPOSED_UCR
    - L2_OVERRIDE_PD
    - L2_OVERRIDE_UCR
    - APPROVED_PD
    - APPROVED_UCR
    - PD_APPROVAL_DATE
    - PD_EXPIRY_DATE
    - FAIR_ID
    - LBCDB_ID
    - GBCDB_ID
    - HREKNR
    - RAPID_ID
    - T24_ID
    - DUNS
    - GRACE_ID
    - CS_ID
    - COUNTRY_CODE
    - PORTFOLIO
    - BUSINESSLINE
    - RATING_ID
    - PARENT_COMPANY_ID
    - PARENT_RATING_REVIEW_ALERT
    - SOVEREIGN_RATING_REVIEW_ALERT
    - USED_FINANCIALS_EXPIRATION_ALERT
    - PD_INCLUDING_CONSERVATISM
    - UCR_INCLUDING_CONSERVATISM
    - TYPE_OF_CONSERVATISM
    - MARGIN_OF_CONSERVATISM
    - PD_FLOORED
    - PROPOSER
    - APPROVER
    - LB_RATING_ID
    source: stg_{{ RUN_MONTH }}.dial_fair_pd_ucr

  # Historical performing ratings (UCR not in 6,7,8)
  - alias: HIST_PERF_RATINGS
    columns:
    - COMPANY_ID
    - PD_MODEL_VERSION
    - APPROVED_UCR
    - PD_APPROVAL_DATE
    - PORTFOLIO
    - BUSINESSLINE
    - RATING_ID
    source: stg_{{ RUN_MONTH }}.dial_fair_pd_ucr
    filter: APPROVED_UCR NOT IN ('6', '7', '8')

  # Fallback models (minimum rating_id for each company+portfolio+businessline)
  - alias: FALLBACK_RATINGS
    columns:
    - COMPANY_ID
    - PD_MODEL_VERSION
    - PORTFOLIO
    - BUSINESSLINE
    - RATING_ID
    source: stg_{{ RUN_MONTH }}.dial_fair_pd_ucr

transformations:
  # Calculate all variables at once
  - add_variables:
      source: DIAL_FAIR_PD_UCR
      column_mapping:
        months_since_approval: months_between(current_date(), DIAL_FAIR_PD_UCR.PD_APPROVAL_DATE)

  # Get the last performing model - first find the most recent date
  - aggregation:
      alias: MOST_RECENT_DATES
      source: HIST_PERF_RATINGS
      group:
      - HIST_PERF_RATINGS.COMPANY_ID
      - HIST_PERF_RATINGS.PORTFOLIO
      - HIST_PERF_RATINGS.BUSINESSLINE
      column_mapping:
        most_recent_date: max(HIST_PERF_RATINGS.PD_APPROVAL_DATE)

  # Join to get all ratings from that most recent date
  - join:
      alias: RECENT_PERF
      left_source: MOST_RECENT_DATES
      right_source: HIST_PERF_RATINGS
      how: inner
      condition:
      - MOST_RECENT_DATES.COMPANY_ID = HIST_PERF_RATINGS.COMPANY_ID
      - MOST_RECENT_DATES.PORTFOLIO = HIST_PERF_RATINGS.PORTFOLIO
      - MOST_RECENT_DATES.BUSINESSLINE = HIST_PERF_RATINGS.BUSINESSLINE
      - MOST_RECENT_DATES.most_recent_date = HIST_PERF_RATINGS.PD_APPROVAL_DATE

  # Among those with most recent date, get the one with highest rating_id
  - aggregation:
      alias: LAST_PERF_MODELS
      source: RECENT_PERF
      group:
      - RECENT_PERF.COMPANY_ID
      - RECENT_PERF.PORTFOLIO
      - RECENT_PERF.BUSINESSLINE
      column_mapping:
        max_rating_id: max(RECENT_PERF.RATING_ID)

  # Get the exact model version for that highest rating_id
  - join:
      alias: FINAL_PERF_MODELS
      left_source: LAST_PERF_MODELS
      right_source: RECENT_PERF
      how: inner
      condition:
      - LAST_PERF_MODELS.COMPANY_ID = RECENT_PERF.COMPANY_ID
      - LAST_PERF_MODELS.PORTFOLIO = RECENT_PERF.PORTFOLIO
      - LAST_PERF_MODELS.BUSINESSLINE = RECENT_PERF.BUSINESSLINE
      - LAST_PERF_MODELS.max_rating_id = RECENT_PERF.RATING_ID

  # Create fallback models (models with lowest rating_id per company+portfolio+businessline)
  - aggregation:
      alias: MIN_RATING_IDS
      source: FALLBACK_RATINGS
      group:
      - FALLBACK_RATINGS.COMPANY_ID
      - FALLBACK_RATINGS.PORTFOLIO
      - FALLBACK_RATINGS.BUSINESSLINE
      column_mapping:
        min_rating_id: min(FALLBACK_RATINGS.RATING_ID)

  # Join to get the exact model version for that lowest rating_id
  - join:
      alias: FALLBACK_MODELS
      left_source: MIN_RATING_IDS
      right_source: FALLBACK_RATINGS
      how: inner
      condition:
      - MIN_RATING_IDS.COMPANY_ID = FALLBACK_RATINGS.COMPANY_ID
      - MIN_RATING_IDS.PORTFOLIO = FALLBACK_RATINGS.PORTFOLIO
      - MIN_RATING_IDS.BUSINESSLINE = FALLBACK_RATINGS.BUSINESSLINE
      - MIN_RATING_IDS.min_rating_id = FALLBACK_RATINGS.RATING_ID

  # Join the last performing models to the main data
  - join:
      left_source: DIAL_FAIR_PD_UCR
      right_source: FINAL_PERF_MODELS
      how: left
      condition:
      - DIAL_FAIR_PD_UCR.COMPANY_ID = FINAL_PERF_MODELS.COMPANY_ID
      - DIAL_FAIR_PD_UCR.PORTFOLIO = FINAL_PERF_MODELS.PORTFOLIO
      - DIAL_FAIR_PD_UCR.BUSINESSLINE = FINAL_PERF_MODELS.BUSINESSLINE

  # Join the fallback models to the main data
  - join:
      right_source: FALLBACK_MODELS
      how: left
      condition:
      - DIAL_FAIR_PD_UCR.COMPANY_ID = FALLBACK_MODELS.COMPANY_ID
      - DIAL_FAIR_PD_UCR.PORTFOLIO = FALLBACK_MODELS.PORTFOLIO
      - DIAL_FAIR_PD_UCR.BUSINESSLINE = FALLBACK_MODELS.BUSINESSLINE

expressions:
  PD_RATING_ID: DIAL_FAIR_PD_UCR.PD_RATING_ID
  COMPANY_ID: DIAL_FAIR_PD_UCR.COMPANY_ID
  RATING_STATUS: DIAL_FAIR_PD_UCR.RATING_STATUS
  RATING_PROVIDING_SYSTEM: DIAL_FAIR_PD_UCR.RATING_PROVIDING_SYSTEM
  PD_MODEL_VERSION: DIAL_FAIR_PD_UCR.PD_MODEL_VERSION
  STAND_ALONE_RATING_PD: DIAL_FAIR_PD_UCR.STAND_ALONE_RATING_PD
  STAND_ALONE_RATING_UCR: DIAL_FAIR_PD_UCR.STAND_ALONE_RATING_UCR
  COUNTRY_RISK_ADJUSTED_PD: DIAL_FAIR_PD_UCR.COUNTRY_RISK_ADJUSTED_PD
  COUNTRY_RISK_ADJUSTED_UCR: DIAL_FAIR_PD_UCR.COUNTRY_RISK_ADJUSTED_UCR
  GROUP_SUPPORT_ADJUSTED_PD: DIAL_FAIR_PD_UCR.GROUP_SUPPORT_ADJUSTED_PD
  GROUP_SUPPORT_ADJUSTED_UCR: DIAL_FAIR_PD_UCR.GROUP_SUPPORT_ADJUSTED_UCR
  L1_OVERRIDE_PD: DIAL_FAIR_PD_UCR.L1_OVERRIDE_PD
  L1_OVERRIDE_UCR: DIAL_FAIR_PD_UCR.L1_OVERRIDE_UCR
  PROPOSED_PD: DIAL_FAIR_PD_UCR.PROPOSED_PD
  PROPOSED_UCR: DIAL_FAIR_PD_UCR.PROPOSED_UCR
  L2_OVERRIDE_PD: DIAL_FAIR_PD_UCR.L2_OVERRIDE_PD
  L2_OVERRIDE_UCR: DIAL_FAIR_PD_UCR.L2_OVERRIDE_UCR
  APPROVED_PD: DIAL_FAIR_PD_UCR.APPROVED_PD
  APPROVED_UCR: DIAL_FAIR_PD_UCR.APPROVED_UCR
  PD_APPROVAL_DATE: DIAL_FAIR_PD_UCR.PD_APPROVAL_DATE
  PD_EXPIRY_DATE: DIAL_FAIR_PD_UCR.PD_EXPIRY_DATE
  FAIR_ID: DIAL_FAIR_PD_UCR.FAIR_ID
  LBCDB_ID: DIAL_FAIR_PD_UCR.LBCDB_ID
  GBCDB_ID: DIAL_FAIR_PD_UCR.GBCDB_ID
  HREKNR: DIAL_FAIR_PD_UCR.HREKNR
  RAPID_ID: DIAL_FAIR_PD_UCR.RAPID_ID
  T24_ID: DIAL_FAIR_PD_UCR.T24_ID
  DUNS: DIAL_FAIR_PD_UCR.DUNS
  GRACE_ID: DIAL_FAIR_PD_UCR.GRACE_ID
  CS_ID: DIAL_FAIR_PD_UCR.CS_ID
  COUNTRY_CODE: DIAL_FAIR_PD_UCR.COUNTRY_CODE
  PORTFOLIO: DIAL_FAIR_PD_UCR.PORTFOLIO
  BUSINESSLINE: DIAL_FAIR_PD_UCR.BUSINESSLINE
  RATING_ID: DIAL_FAIR_PD_UCR.RATING_ID
  PARENT_COMPANY_ID: DIAL_FAIR_PD_UCR.PARENT_COMPANY_ID
  PARENT_RATING_REVIEW_ALERT: DIAL_FAIR_PD_UCR.PARENT_RATING_REVIEW_ALERT
  SOVEREIGN_RATING_REVIEW_ALERT: DIAL_FAIR_PD_UCR.SOVEREIGN_RATING_REVIEW_ALERT
  USED_FINANCIALS_EXPIRATION_ALERT: DIAL_FAIR_PD_UCR.USED_FINANCIALS_EXPIRATION_ALERT
  PD_INCLUDING_CONSERVATISM: DIAL_FAIR_PD_UCR.PD_INCLUDING_CONSERVATISM
  UCR_INCLUDING_CONSERVATISM: DIAL_FAIR_PD_UCR.UCR_INCLUDING_CONSERVATISM
  TYPE_OF_CONSERVATISM: DIAL_FAIR_PD_UCR.TYPE_OF_CONSERVATISM
  MARGIN_OF_CONSERVATISM: DIAL_FAIR_PD_UCR.MARGIN_OF_CONSERVATISM
  PD_FLOORED: DIAL_FAIR_PD_UCR.PD_FLOORED
  PROPOSER: DIAL_FAIR_PD_UCR.PROPOSER
  APPROVER: DIAL_FAIR_PD_UCR.APPROVER
  LB_RATING_ID: DIAL_FAIR_PD_UCR.LB_RATING_ID
  
  # Last Performing Model logic
  LastPerformingModel: >
    CASE 
      WHEN DIAL_FAIR_PD_UCR.APPROVED_UCR NOT IN ('6', '7', '8') THEN DIAL_FAIR_PD_UCR.PD_MODEL_VERSION 
      WHEN FINAL_PERF_MODELS.PD_MODEL_VERSION IS NOT NULL THEN FINAL_PERF_MODELS.PD_MODEL_VERSION 
      ELSE FALLBACK_MODELS.PD_MODEL_VERSION 
    END

filter_target:
  - DIAL_FAIR_PD_UCR.RATING_STATUS = 'ACTUAL' AND (months_since_approval < 24 OR DIAL_FAIR_PD_UCR.APPROVED_UCR IN ('6', '7', '8'))

drop_duplicates: true
